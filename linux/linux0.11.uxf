<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>																							// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>1</zoom_level>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>356</x>
      <y>588</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>main</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>118</x>
      <y>607</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>mem_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>137</x>
      <y>607</y>
      <w>43</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>trap_init
(在异常向量表入口处&amp;ldt[n],设置执行函数，和相关的权限和类型)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>158</x>
      <y>591</y>
      <w>205</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>2040.0;10.0;15.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>149</x>
      <y>610</y>
      <w>12</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>105.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>143</x>
      <y>616</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>set_trap_gate</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>161</x>
      <y>616</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>set_system_gate</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>158</x>
      <y>610</y>
      <w>10</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>15.0;10.0;90.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>144</x>
      <y>625</y>
      <w>30</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_set_gate 参考linux内核设计的艺术p58
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>147</x>
      <y>619</y>
      <w>11</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;95.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>156</x>
      <y>619</y>
      <w>12</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>110.0;10.0;15.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>182</x>
      <y>607</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>blk_dev_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>197</x>
      <y>607</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>chr_dev_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>218</x>
      <y>607</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>tty_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>311</x>
      <y>609</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>time_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>405</x>
      <y>606</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sched_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>514</x>
      <y>605</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>buffer_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>600</x>
      <y>605</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>hd_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>652</x>
      <y>605</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>floppy_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>693</x>
      <y>605</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sti
（开启中断）</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>716</x>
      <y>605</y>
      <w>21</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>move_to_user_mode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>780</x>
      <y>605</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>fork
创建进程1
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1690</x>
      <y>607</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>2082</x>
      <y>598</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>pause</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>361</x>
      <y>591</y>
      <w>155</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;1535.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>361</x>
      <y>591</y>
      <w>425</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;4235.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>362</x>
      <y>591</y>
      <w>1335</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;4380.0;130.0;13335.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>362</x>
      <y>591</y>
      <w>1727</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;17255.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>57</x>
      <y>606</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>设置ROOT_DEV
	drive_info
	memory_end
	buffer_memory_end 缓存区
	rd_start rd_start 虚拟内存并初始化 使blk_dev[1].request_fn = DEVICE_REQUEST
	main_memory_start 主内存区
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>80</x>
      <y>591</y>
      <w>283</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>2820.0;10.0;15.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>123</x>
      <y>591</y>
      <w>239</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
main_memory_start
memory_end
</panel_attributes>
    <additional_attributes>2380.0;10.0;15.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>111</x>
      <y>617</y>
      <w>27</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>HIGH_MEMORY = end_mem
缓冲区和虚拟内存 mem_map[i] = USED
主内存		mem_map[i]=0
其中i为从1MB开始的页面index
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>121</x>
      <y>610</y>
      <w>4</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>25.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>186</x>
      <y>591</y>
      <w>177</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>1760.0;10.0;15.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>188</x>
      <y>610</y>
      <w>13</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
NR_REQUEST
</panel_attributes>
    <additional_attributes>10.0;10.0;15.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>178</x>
      <y>618</y>
      <w>17</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>request[i].dev = -1
request[i].next = NULL
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>222</x>
      <y>591</y>
      <w>141</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>1400.0;10.0;15.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>204</x>
      <y>616</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>rs_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>254</x>
      <y>618</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>con_init</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>209</x>
      <y>610</y>
      <w>17</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
串口初始化
</panel_attributes>
    <additional_attributes>160.0;10.0;15.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>224</x>
      <y>610</y>
      <w>36</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;345.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>305</x>
      <y>531</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>startup_32</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>233</x>
      <y>530</y>
      <w>185</w>
      <h>41</h>
    </coordinates>
    <panel_attributes>head.S
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>234</x>
      <y>543</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>esp=&amp;user_stack
ss=0x10
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>238</x>
      <y>534</y>
      <w>74</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>720.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>269</x>
      <y>541</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>setup_idt</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>273</x>
      <y>534</y>
      <w>39</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>370.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>249</x>
      <y>551</y>
      <w>24</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>中断服务程序默认指向 ignore_int
总共有256字节的idt，每个idt8字节

idt每个元素占8字节 分布：
0,1中断服务程序的地址的低2字节
2,3为段选择符，这里为0x8000
4,5有type 以及权限dpl
6,7为中断服务程序的高2字节
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>259</x>
      <y>544</y>
      <w>17</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>279</x>
      <y>555</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lidt idt_descr
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>273</x>
      <y>544</y>
      <w>13</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>305</x>
      <y>542</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>setup_gdt</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>309</x>
      <y>534</y>
      <w>4</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>294</x>
      <y>555</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lgdt gdt_descr
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>299</x>
      <y>545</y>
      <w>13</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>308</x>
      <y>555</y>
      <w>30</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>总共有256字节的gdt，每个gdt8字节
head.S中定义了4个gdt，第一个和第四个为空，
第2,3字节参考linux内核设计的艺术p33图1-31
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>309</x>
      <y>545</y>
      <w>14</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>341</x>
      <y>541</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>check_x87</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>309</x>
      <y>534</y>
      <w>38</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;360.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>360</x>
      <y>541</y>
      <w>44</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>after_page_tables
（类call调用，先将参数和Main函数压栈，当ret时即可调用main）</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>309</x>
      <y>534</y>
      <w>64</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;625.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>347</x>
      <y>554</y>
      <w>25</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>将参数和main压栈
当setup_paging ret时，main函数出栈
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>357</x>
      <y>544</y>
      <w>24</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>394</x>
      <y>552</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>setup_paging</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>378</x>
      <y>544</y>
      <w>23</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>383</x>
      <y>559</y>
      <w>32</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>设置page索引
参考linux内核设计的艺术p39图1-42及解释
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>398</x>
      <y>555</y>
      <w>3</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>176</x>
      <y>626</y>
      <w>24</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>set_intr_gate(0x24,rs1_interrupt)
set_intr_gate(0x23,rs2_interrupt)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>191</x>
      <y>619</y>
      <w>20</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置串口1,2的中断
</panel_attributes>
    <additional_attributes>190.0;10.0;15.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>209</x>
      <y>619</y>
      <w>17</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
初始化串口1,2
就是写port，并读值
</panel_attributes>
    <additional_attributes>10.0;10.0;55.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>202</x>
      <y>626</y>
      <w>24</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>init(tty_table[1].read_q.data)
init(tty_table[2].read_q.data)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>209</x>
      <y>619</y>
      <w>26</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
打开串口中断，
</panel_attributes>
    <additional_attributes>10.0;10.0;245.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>227</x>
      <y>626</y>
      <w>22</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>outb(inb_p(0x21)&amp;0xE7,0x21)
即使port(0x21)&amp;0xE7
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>250</x>
      <y>626</y>
      <w>13</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>video_mem_start
video_port_reg
video_port_val
video_type
video_mem_end
display_desc
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>266</x>
      <y>626</y>
      <w>29</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>set_trap_gate(0x21,&amp;keyboard_interrupt)
outb_p(inb_p(0x21)&amp;0xfd,0x21)
outb_p(a|0x80,0x61)
outb(a,0x61)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>621</y>
      <w>20</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置键盘中断，并打开
使能键盘</panel_attributes>
    <additional_attributes>10.0;10.0;185.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>253</x>
      <y>621</y>
      <w>8</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置显卡
</panel_attributes>
    <additional_attributes>70.0;10.0;15.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>315</x>
      <y>591</y>
      <w>48</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
从CMOS读取时间
转化为2进制
计算从1970年来经过的时间
</panel_attributes>
    <additional_attributes>470.0;10.0;15.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>295</x>
      <y>618</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>CMOS_READ</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>314</x>
      <y>618</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>BCD_TO_BIN</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>335</x>
      <y>618</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>kernel_mktime</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>299</x>
      <y>612</y>
      <w>19</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>180.0;10.0;15.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>316</x>
      <y>612</y>
      <w>5</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;10.0;35.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>316</x>
      <y>612</y>
      <w>26</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;10.0;245.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>335</x>
      <y>624</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>startup_time
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>340</x>
      <y>621</y>
      <w>3</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>20.0;10.0;15.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>361</x>
      <y>591</y>
      <w>338</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;3365.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>348</x>
      <y>617</y>
      <w>24</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>set_tss_desc
set_ldt_desc
参考参考linux内核设计的艺术p69-
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>353</x>
      <y>609</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
在gdt+FIRST_TSS_ENTRY和gdt+FIRST_LDT_ENTRY
分别填入组装的task0的tss和LDT

</panel_attributes>
    <additional_attributes>560.0;10.0;15.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>374</x>
      <y>618</y>
      <w>24</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>task[i] = NULL
并将gdt中的tss和LDT初始化为0
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>385</x>
      <y>609</y>
      <w>25</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>240.0;10.0;15.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>399</x>
      <y>618</y>
      <w>17</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>清除EFLAG中的NT位
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>406</x>
      <y>609</y>
      <w>4</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>30.0;10.0;15.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>418</x>
      <y>618</y>
      <w>17</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>ltr(0) （ltr _TSS(0)）
lldt(0) （lldt _LDT(0)）
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>609</y>
      <w>38</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
加载Task0的TSS和LDT到寄存器中
其中_TSS(0)和_LDT(0)是TSS和LDT相对于gdt的偏移地址

</panel_attributes>
    <additional_attributes>90.0;10.0;275.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>361</x>
      <y>591</y>
      <w>49</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;475.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>437</x>
      <y>617</y>
      <w>25</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>outb_p(0x36,0x43)
outb_p(LATCH &amp; 0xff , 0x40)
outb(LATCH &gt;&gt; 8 , 0x40)
set_intr_gate(0x20,&amp;timer_interrupt)
outb(inb_p(0x21)&amp;~0x01,0x21)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>609</y>
      <w>37</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置定时器中断（10ms）

</panel_attributes>
    <additional_attributes>10.0;10.0;355.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>464</x>
      <y>619</y>
      <w>26</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>set_system_gate(0x80,&amp;system_call)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>609</y>
      <w>63</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置int80的中断服务程序
system_call

</panel_attributes>
    <additional_attributes>10.0;10.0;580.0;70.0;615.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>501</x>
      <y>608</y>
      <w>21</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>466</x>
      <y>625</y>
      <w>42</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>注意start_buffer=&amp;end,end是在链接的时候指定的
buffer_end等于1M时，取640K（640K-1M被显存和BIOS占用）
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>517</x>
      <y>608</y>
      <w>30</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
从start_buffer构建循环链表的buffer_head</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>512</x>
      <y>621</y>
      <w>44</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>h-&gt;b_dev = 0;                       // 使用该缓冲块的设备号
h-&gt;b_dirt = 0;                      // 脏标志，即缓冲块修改标志
h-&gt;b_count = 0;                     // 缓冲块引用计数
h-&gt;b_lock = 0;                      // 缓冲块锁定标志
h-&gt;b_uptodate = 0;                  // 缓冲块更新标志(或称数据有效标志)
h-&gt;b_wait = NULL;                   // 指向等待该缓冲块解锁的进程
h-&gt;b_next = NULL;                   // 指向具有相同hash值的下一个缓冲头
h-&gt;b_prev = NULL;                   // 指向具有相同hash值的前一个缓冲头
h-&gt;b_data = (char *) b;             // 指向对应缓冲块数据块（1024字节）
h-&gt;b_prev_free = h-1;               // 指向链表中前一项
h-&gt;b_next_free = h+1;               // 指向连表中后一项
NR_BUFFERS++;                       // 缓冲区块数累加
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>559</x>
      <y>622</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>hash_table[i]=NULL
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>519</x>
      <y>608</y>
      <w>48</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
初始化hash表</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;40.0;460.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>361</x>
      <y>591</y>
      <w>243</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;2415.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>582</x>
      <y>608</y>
      <w>27</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
挂上请求函数</panel_attributes>
    <additional_attributes>250.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>558</x>
      <y>629</y>
      <w>51</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>blk_dev[MAJOR_NR].request_fn = DEVICE_REQUEST（do_hd_request）
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>614</x>
      <y>627</y>
      <w>25</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>set_intr_gate(0x2E,&amp;hd_interrupt)
outb_p(inb_p(0x21)&amp;0xfb,0x21)
outb(inb_p(0xA1)&amp;0xbf,0xA1)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>606</x>
      <y>608</y>
      <w>21</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置中断服务函数
并开启中断</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>627</x>
      <y>608</y>
      <w>32</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
挂上请求函数</panel_attributes>
    <additional_attributes>300.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>621</x>
      <y>620</y>
      <w>51</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>blk_dev[MAJOR_NR].request_fn = DEVICE_REQUEST（do_hd_request）
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>677</x>
      <y>619</y>
      <w>25</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>set_trap_gate(0x26,&amp;floppy_interrupt)
outb(inb_p(0x21)&amp;~0x40,0x21)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>656</x>
      <y>608</y>
      <w>32</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置中断服务函数
并开启中断</panel_attributes>
    <additional_attributes>10.0;10.0;300.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>362</x>
      <y>591</y>
      <w>294</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;2925.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>362</x>
      <y>591</y>
      <w>361</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;3595.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>718</x>
      <y>608</y>
      <w>15</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
模拟中断返回
</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>703</x>
      <y>618</y>
      <w>42</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>将0x17（ss）,esp,EFLAG,0x0f(cs),IP压栈
（0x17,0xF）最后两位是dpl，到手第三位是LDT（1）/GDT（0）
之后便是LDT/GDT的第几项
一旦iret，这些值会返回给寄存器
将cpu的权限设置成3
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>748</x>
      <y>619</y>
      <w>19</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>设置ds,es,fs,gs为0x17
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>727</x>
      <y>608</y>
      <w>30</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;280.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>780</x>
      <y>612</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_syscall0(int,fork)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>785</x>
      <y>608</y>
      <w>3</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>615</y>
      <w>24</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将res指向eax，并使eax=_NR_fork</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>774</x>
      <y>622</y>
      <w>34</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>int 0x80
注意：此时IP的地址是指向下一句（if (__res &gt;= 0)）
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>785</x>
      <y>625</y>
      <w>9</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
中断0x80</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>772</x>
      <y>629</y>
      <w>35</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>system_call
此时栈中因为中断存储ss/sp/eflag/cs/ip五个寄存器值
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>761</x>
      <y>632</y>
      <w>30</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
判断_NR_fork 在systam_call的数组范围之内</panel_attributes>
    <additional_attributes>260.0;10.0;30.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>751</x>
      <y>638</y>
      <w>20</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>压栈ds es fs edx ecx ebx
使ds=es=0x10
fs=0x17
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>825</x>
      <y>642</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_fork</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>787</x>
      <y>632</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
sys_call_table(,%eax,4)
是sys_call_table+(%eax*4)</panel_attributes>
    <additional_attributes>10.0;10.0;420.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>778</x>
      <y>644</y>
      <w>54</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>520.0;20.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>770</x>
      <y>647</y>
      <w>15</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_empty_process</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>744</x>
      <y>650</y>
      <w>37</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到空闲的pid
逻辑：将pid++，遍历整个task数组，找到之后重复过程，
		直到没找到，则认为是下个进程的pid
</panel_attributes>
    <additional_attributes>310.0;10.0;50.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>745</x>
      <y>660</y>
      <w>9</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>pid
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>778</x>
      <y>660</y>
      <w>7</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>i
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>774</x>
      <y>650</y>
      <w>29</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
遍历task数组，找到空闲的位置放task
</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>829</x>
      <y>645</y>
      <w>46</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
压栈gs esi edi ebp eax（eax存储进程在task数组中的位置）
</panel_attributes>
    <additional_attributes>10.0;10.0;440.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>868</x>
      <y>648</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>copy_process</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>792</x>
      <y>657</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_free_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>796</x>
      <y>651</y>
      <w>79</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>770.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>768</x>
      <y>660</y>
      <w>46</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
edi中存储mem_map最后一个地址
ecx中存储页面
std ; repne ; scasb\n\t"，会检查edi地址上的值是否为1，并将edi，ecx -1
</panel_attributes>
    <additional_attributes>300.0;10.0;150.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>766</x>
      <y>671</y>
      <w>40</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>1.从后向前找到mem_map不为1的page
2.将mem_map置1
3.得到该page的起始地址，并从page后端将这个page清0
4.将该page的起始地址返回
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>811</x>
      <y>673</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>task[nr] = p
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>817</x>
      <y>651</y>
      <w>58</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>560.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>821</x>
      <y>678</y>
      <w>68</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>*p = *current
p-&gt;state = TASK_UNINTERRUPTIBLE;
p-&gt;pid = last_pid;              // 新进程号
p-&gt;father = current-&gt;pid;       // 设置父进程
p-&gt;counter = p-&gt;priority;       // 运行时间片值
p-&gt;signal = 0;                  // 信号位图置0
p-&gt;alarm = 0;                   // 报警定时值(滴答数)
p-&gt;leader = 0;		/* process leadership doesn't inherit */
p-&gt;utime = p-&gt;stime = 0;        // 用户态时间和和心态运行时间
p-&gt;cutime = p-&gt;cstime = 0;      // 子进程用户态和和心态运行时间
p-&gt;start_time = jiffies;        // 进程开始运行时间(当前时间滴答数)


p-&gt;tss.back_link = 0;
p-&gt;tss.esp0 = PAGE_SIZE + (long) p;     // 任务内核态栈指针。
p-&gt;tss.ss0 = 0x10;                      // 内核态栈的段选择符(与内核数据段相同)
p-&gt;tss.eip = eip;                       // 注意这里的eip是int 80传进来的ip地址
p-&gt;tss.eflags = eflags;                 // 标志寄存器
p-&gt;tss.eax = 0;                         // 这是当fork()返回时新进程会返回0的原因所在
p-&gt;tss.ecx = ecx;
p-&gt;tss.edx = edx;
p-&gt;tss.ebx = ebx;
p-&gt;tss.esp = esp;
p-&gt;tss.ebp = ebp;
p-&gt;tss.esi = esi;
p-&gt;tss.edi = edi;
p-&gt;tss.es = es &amp; 0xffff;                // 段寄存器仅16位有效
p-&gt;tss.cs = cs &amp; 0xffff;
p-&gt;tss.ss = ss &amp; 0xffff;
p-&gt;tss.ds = ds &amp; 0xffff;
p-&gt;tss.fs = fs &amp; 0xffff;
p-&gt;tss.gs = gs &amp; 0xffff;
p-&gt;tss.ldt = _LDT(nr);                  // 任务局部表描述符的选择符(LDT描述符在GDT中)
p-&gt;tss.trace_bitmap = 0x80000000;       // 高16位有效
注释（对内核栈和用户栈暂时的理解）：这里只对内核栈进行了设置也就是esp0，用户栈并没
有设置，此时用户栈的esp和ess应该是和父进程相同，由进程0的move_to_user_mode可知，
进程0的用户栈的ess是0x17（11（第三项）1（ldt）11（用户态3）），esp应该是user_stack
的尾部。
在copy_mem中的copy_page_tables中会将user_stack copy到自己的线性空间，其中ess还是
不变，此时子进程和父进程的用户栈对应的实际物理地址是相同的，但是子进程在copy父进程的page_table
的过程中，将子进程对于父进程的所有的内存访问都设置成只读，所以对应的user_stack也设置成只读，
所以当子进程在用户态写栈的话，就会发生页错误，触发中断，也就是写时复制（具体参考do_wp_page）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>846</x>
      <y>651</y>
      <w>29</w>
      <h>29</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
复制父进程，并修改特性</panel_attributes>
    <additional_attributes>270.0;10.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>904</x>
      <y>669</y>
      <w>19</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>copy_mem</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>872</x>
      <y>651</y>
      <w>36</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>893</x>
      <y>672</y>
      <w>26</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置代码段和数据段的基地址
从LDT的代码段和数据段描述符中获得</panel_attributes>
    <additional_attributes>220.0;10.0;30.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>890</x>
      <y>679</y>
      <w>26</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>p-&gt;start_code=nr * 0x4000000
set_base(p-&gt;ldt[1],nr * 0x4000000)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>934</x>
      <y>679</y>
      <w>19</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>copy_page_tables</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>910</x>
      <y>672</y>
      <w>41</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
父进程数据段基地址
代码段数据段基地址
段限长（从LDT的数据段描述符（第三个（第二项））中获得）</panel_attributes>
    <additional_attributes>60.0;10.0;340.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>943</x>
      <y>682</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>904</x>
      <y>687</y>
      <w>66</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>1.筛选出父进程用过的页表的目录项开始复制
2.使用get_free_page得到创建进程页表项的基地址
3.指定复制页表项的长度（父进程是0，为160个页表项，否则复制1024个页表项）
4.复制页表项中的内容（page的基地址），如果该页表父进程没用则不用复制，并设置为只可读
5.对于1M之后的区域，父进程设置为只可读，并将mem_map的中该page的引用++
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>872</x>
      <y>651</y>
      <w>92</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果父进程引用的了文件
将文件计数++</panel_attributes>
    <additional_attributes>10.0;10.0;900.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>955</x>
      <y>669</y>
      <w>26</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>for (i=0; i&lt;NR_OPEN;i++)
		if ((f=p-&gt;filp[i]))
			f-&gt;f_count++;
	if (current-&gt;pwd)
		current-&gt;pwd-&gt;i_count++;
	if (current-&gt;root)
		current-&gt;root-&gt;i_count++;
	if (current-&gt;executable)
		current-&gt;executable-&gt;i_count++;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>986</x>
      <y>660</y>
      <w>40</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>set_tss_desc(gdt+(nr&lt;&lt;1)+FIRST_TSS_ENTRY,&amp;(p-&gt;tss));
	set_ldt_desc(gdt+(nr&lt;&lt;1)+FIRST_LDT_ENTRY,&amp;(p-&gt;ldt));
	p-&gt;state = TASK_RUNNING;	/* do this last, just in case */
	return last_pid;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>874</x>
      <y>651</y>
      <w>119</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
在GDT中设置进程的TSS段和LDT段
将task的状态改为就绪态
返回进程的进程号
</panel_attributes>
    <additional_attributes>10.0;10.0;1170.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>788</x>
      <y>632</y>
      <w>58</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
这里的返回值是copy_process中的last_pid

</panel_attributes>
    <additional_attributes>10.0;10.0;560.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>838</x>
      <y>636</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>last_pid
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>645</y>
      <w>213</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.将返回值eax压栈
2.如果当前进程不处于就绪态或者时间片用完则reschedule
3.如果当前进程是进程0，则跳转到3
</panel_attributes>
    <additional_attributes>10.0;10.0;2110.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1035</x>
      <y>656</y>
      <w>48</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>pushl %eax
movl current,%eax
cmpl $0,state(%eax)		# state
jne reschedule
cmpl $0,counter(%eax)		# counter
je reschedule
movl current,%eax	
cmpl task,%eax
je 3f     
...
...
popl %eax                       # eax中含有上面入栈系统调用的返回值
popl %ebx
popl %ecx
popl %edx
pop %fs
pop %es
pop %ds 
iret
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>786</x>
      <y>594</y>
      <w>1303</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果last_pid!=0，则进入</panel_attributes>
    <additional_attributes>10.0;110.0;520.0;10.0;13010.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2079</x>
      <y>607</y>
      <w>19</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_syscall0(int,pause)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2087</x>
      <y>601</y>
      <w>3</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2072</x>
      <y>615</y>
      <w>35</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>system_call(在system_call中和fork一致)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2087</x>
      <y>610</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>2082</x>
      <y>623</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_pause</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2087</x>
      <y>618</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2052</x>
      <y>630</y>
      <w>28</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>current-&gt;state = TASK_INTERRUPTIBLE
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2066</x>
      <y>626</y>
      <w>23</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>2112</x>
      <y>630</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>schedule</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2087</x>
      <y>626</y>
      <w>34</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>791</x>
      <y>605</y>
      <w>906</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
当pause()执行之后，返回值为eax，当时初始化tss段时eax=0，则执行init()</panel_attributes>
    <additional_attributes>10.0;20.0;9040.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2083</x>
      <y>633</y>
      <w>36</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
从后遍历整个task数组</panel_attributes>
    <additional_attributes>340.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2000</x>
      <y>639</y>
      <w>94</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>1.判断是否存在task
2、判断是否存在alarm，存在如果alarm时间到，则设置SIGALRM的signal到(*p)-&gt;signal，并将alarm置0chu
3.判断除了被阻塞的信号，还有没有其他信号（blocked中为0表示这个进程被这个信号位图阻塞），如果有且task的状态位TASK_INTERRUPTIBLE
，则将task状态改为TASK_RUNNING
4。在switch_to的过程中会检测这个进程和当前进程是否一样，如果一样则不会跳转，继续执行，这种情况的典型例子是就是怠速进程0的执行
5.如果所有的task都不处于TASK_RUNNING状态，即c=-1,，而此时next=0，所以会switch_to(0),所以当所有的task都处于TASK_INTERRUPTIBLE
	状态时，就默认调到0进程，也就是0进程是linux0.11的怠速进程，这个进程会一直在for(;;), pause,schedule这个过程中
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2096</x>
      <y>640</y>
      <w>50</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>1.滤除NULL的task
2.找到task状态位TASK_RUNNING，
	且时间片最大的task数组中的位置，设置为next
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2116</x>
      <y>633</y>
      <w>18</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
从后遍历整个task数组</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2116</x>
      <y>633</y>
      <w>43</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
从后遍历整个task数组
为不等于NULL的task重新分配时间片</panel_attributes>
    <additional_attributes>10.0;10.0;410.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2148</x>
      <y>642</y>
      <w>35</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>(*p)-&gt;counter = ((*p)-&gt;counter &gt;&gt; 1) + (*p)-&gt;priority;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>2187</x>
      <y>642</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>switch_to
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2116</x>
      <y>633</y>
      <w>78</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
next</panel_attributes>
    <additional_attributes>10.0;10.0;760.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2192</x>
      <y>645</y>
      <w>55</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
当ljmp时，硬件会将源TSS段进行保存
硬件会将段选择符中的TSS段加载到硬件中
此时，硬件要执行下一条指令则是跳转的task中cs：ip指向的地址
注意此时ip的地址是进程0 fork的时候存下的地址，也就是fork中的（if (__res &gt;= 0)）</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2187</x>
      <y>654</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>current=task[next]
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2088</x>
      <y>626</y>
      <w>73</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;710.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2150</x>
      <y>629</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>return 0
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1198</x>
      <y>634</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>setup</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1203</x>
      <y>610</y>
      <w>495</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&amp;drive_info</panel_attributes>
    <additional_attributes>4930.0;10.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1171</x>
      <y>644</y>
      <w>23</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_syscall1(int,setup,void *,BIOS)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1180</x>
      <y>637</y>
      <w>26</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
drive_info=BIOS</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1056</x>
      <y>691</y>
      <w>43</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>hd_info[drive].cyl = *(unsigned short *) BIOS;
hd_info[drive].head = *(unsigned char *) (2+BIOS);
hd_info[drive].wpcom = *(unsigned short *) (5+BIOS);
hd_info[drive].ctl = *(unsigned char *) (8+BIOS);
hd_info[drive].lzone = *(unsigned short *) (12+BIOS);
hd_info[drive].sect = *(unsigned char *) (14+BIOS);
NR_HD
hd[i*5].start_sect = 0;
hd[i*5].nr_sects = hd_info[i].head*hd_info[i].sect*hd_info[i].cyl;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1075</x>
      <y>647</y>
      <w>108</w>
      <h>46</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>1060.0;10.0;130.0;380.0;10.0;440.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1132</x>
      <y>666</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>bread</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1137</x>
      <y>647</y>
      <w>47</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
0x300 + drive*5,0</panel_attributes>
    <additional_attributes>450.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1120</x>
      <y>674</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>getblk</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1127</x>
      <y>669</y>
      <w>11</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>947</x>
      <y>757</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_hash_table</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>952</x>
      <y>698</y>
      <w>167</w>
      <h>61</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>1650.0;10.0;1460.0;160.0;10.0;590.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>938</x>
      <y>765</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_buffer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>941</x>
      <y>762</y>
      <w>13</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>909</x>
      <y>783</y>
      <w>46</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>从hash(dev,block)开始找到
tmp-&gt;b_dev==dev &amp;&amp; tmp-&gt;b_blocknr==block的项，否则返回NULL
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>935</x>
      <y>768</y>
      <w>10</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>947</x>
      <y>762</y>
      <w>24</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果findbuffer没找到，则返回NULL
否则执行</panel_attributes>
    <additional_attributes>50.0;10.0;180.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>955</x>
      <y>766</y>
      <w>12</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>949</x>
      <y>778</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>bh-&gt;b_count++
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>966</x>
      <y>774</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>wait_on_buffer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>964</x>
      <y>766</y>
      <w>9</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
bh</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>953</x>
      <y>766</y>
      <w>48</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
再次检查bh-&gt;b_dev == dev &amp;&amp; bh-&gt;b_blocknr == block，如果成立则返回bh
否则执行下面语句，并再重复之前的过程</panel_attributes>
    <additional_attributes>120.0;10.0;350.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>982</x>
      <y>777</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>bh-&gt;b_count--
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>951</x>
      <y>759</y>
      <w>6</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
for(;;)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1055</x>
      <y>698</y>
      <w>64</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果get_hash_table找到了，则返回bh
否则执行下面语句</panel_attributes>
    <additional_attributes>620.0;10.0;10.0;540.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>994</x>
      <y>751</y>
      <w>64</w>
      <h>37</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>620.0;10.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>980</x>
      <y>786</y>
      <w>52</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>遍历整个缓存链表，tmp-&gt;b_count！=0（已经被引用）直接pass
在tmp-&gt;b_count中找到权重BADNESS(bh)（((bh)-&gt;b_dirt&lt;&lt;1)+(bh)-&gt;b_lock）最小的
如果其中遇到BADNESS(bh)=0，直接找到了
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1048</x>
      <y>751</y>
      <w>10</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1033</x>
      <y>784</y>
      <w>41</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>如果缓存链表中的所有项都被引用（tmp-&gt;b_count！=0）
sleep_on(&amp;buffer_wait)
然后从repeat开始执行
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1116</x>
      <y>677</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
repeat</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1053</x>
      <y>751</y>
      <w>18</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果找到合适的缓冲块bh
</panel_attributes>
    <additional_attributes>20.0;10.0;150.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1062</x>
      <y>759</y>
      <w>8</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1058</x>
      <y>767</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>wait_on_buffer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1067</x>
      <y>759</y>
      <w>15</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1073</x>
      <y>773</y>
      <w>26</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>filter： bh-&gt;b_count不为0，跳到repeat
否则继续执行
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1062</x>
      <y>770</y>
      <w>10</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
临界区保护
bh-&gt;b_lock</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1057</x>
      <y>774</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sleep_on</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1075</x>
      <y>781</y>
      <w>33</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>*p = current;
	current-&gt;state = TASK_UNINTERRUPTIBLE;
	schedule();
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1063</x>
      <y>777</y>
      <w>32</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;300.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1112</x>
      <y>781</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_buffer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1055</x>
      <y>751</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
看在sleepon的过程中是否有进程将该block读进来，如果有，返回repeat执行
</panel_attributes>
    <additional_attributes>10.0;10.0;530.0;90.0;620.0;300.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1054</x>
      <y>751</y>
      <w>80</w>
      <h>29</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;560.0;60.0;780.0;270.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1125</x>
      <y>778</y>
      <w>19</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>bh-&gt;b_count=1;
bh-&gt;b_dirt=0;
bh-&gt;b_uptodate=0;
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1145</x>
      <y>775</y>
      <w>20</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>remove_from_queues</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1054</x>
      <y>751</y>
      <w>99</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
这里remove_from_queues之后又insert_into_queues应该是想将这个缓冲块插到链表和哈希表的最后</panel_attributes>
    <additional_attributes>10.0;10.0;680.0;60.0;970.0;240.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1182</x>
      <y>774</y>
      <w>20</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>insert_into_queues</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1055</x>
      <y>751</y>
      <w>133</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1070.0;80.0;1310.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1165</x>
      <y>779</y>
      <w>19</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>bh-&gt;b_dev=dev;
bh-&gt;b_blocknr=block;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1054</x>
      <y>751</y>
      <w>122</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;780.0;60.0;1200.0;280.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1126</x>
      <y>784</y>
      <w>38</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>从哈希表中移除
bh-&gt;b_next-&gt;b_prev = bh-&gt;b_prev
bh-&gt;b_prev-&gt;b_next = bh-&gt;b_next
hash(bh-&gt;b_dev,bh-&gt;b_blocknr) = bh-&gt;b_next
从环状链表中移除
bh-&gt;b_prev_free-&gt;b_next_free = bh-&gt;b_next_free;
bh-&gt;b_next_free-&gt;b_prev_free = bh-&gt;b_prev_free;
free_list = bh-&gt;b_next_free
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1147</x>
      <y>778</y>
      <w>10</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1172</x>
      <y>786</y>
      <w>38</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>添加到环状链表地尾端
bh-&gt;b_next_free = free_list;
bh-&gt;b_prev_free = free_list-&gt;b_prev_free;
free_list-&gt;b_prev_free-&gt;b_next_free = bh;
free_list-&gt;b_prev_free = bh;
挂接到hash表中
bh-&gt;b_prev = NULL;
bh-&gt;b_next = NULL;
bh-&gt;b_next = hash(bh-&gt;b_dev,bh-&gt;b_blocknr);
hash(bh-&gt;b_dev,bh-&gt;b_blocknr) = bh;
bh-&gt;b_next-&gt;b_prev = bh;
从这里可以看出bh-&gt;next不是一个环状链表，是一个直链表
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1186</x>
      <y>777</y>
      <w>6</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1129</x>
      <y>669</y>
      <w>32</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果数据更新了（bh-&gt;b_uptodate）则返回缓冲区
否则</panel_attributes>
    <additional_attributes>70.0;10.0;240.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1165</x>
      <y>681</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>ll_rw_block</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1151</x>
      <y>674</y>
      <w>20</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1133</x>
      <y>684</y>
      <w>50</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
进行错误检查
major=MAJOR(bh-&gt;b_dev)) &gt;= NR_BLK_DEV ||!(blk_dev[major].request_fn)
之后传参（major,READ,bh）</panel_attributes>
    <additional_attributes>370.0;10.0;120.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1138</x>
      <y>690</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>make_request</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1128</x>
      <y>696</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lock_buffer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1133</x>
      <y>693</y>
      <w>10</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1122</x>
      <y>703</y>
      <w>18</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>如果buffer lock则sleepon
否则bh-&gt;b_lock=1
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1128</x>
      <y>699</y>
      <w>8</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1142</x>
      <y>693</y>
      <w>13</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1146</x>
      <y>702</y>
      <w>32</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>如果要被写的数据还没写（bh-&gt;b_dirt=0）
或者要读的数据已经更新了（bh-&gt;b_uptodate）
直接返回继续执行
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1098</x>
      <y>682</y>
      <w>20</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>注释：要去读数据经历的过程
b_count++
b_lock=1

valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1142</x>
      <y>693</y>
      <w>51</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
在request数组中找到空闲的request项
找不到就sleepon 被唤醒之后在repeat继续找
read从最尾端开始找，write从2/3尾端开始找
找到之后
</panel_attributes>
    <additional_attributes>10.0;10.0;490.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1185</x>
      <y>698</y>
      <w>8</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1179</x>
      <y>702</y>
      <w>21</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>	req-&gt;dev = bh-&gt;b_dev;
	req-&gt;cmd = rw;
	req-&gt;errors=0;
	req-&gt;sector = bh-&gt;b_blocknr&lt;&lt;1;
	req-&gt;nr_sectors = 2;
	req-&gt;buffer = bh-&gt;b_data;
	req-&gt;waiting = NULL;
	req-&gt;bh = bh;
	req-&gt;next = NULL
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1209</x>
      <y>703</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>add_request</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>698</y>
      <w>28</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
major+blk_dev,req</panel_attributes>
    <additional_attributes>10.0;10.0;260.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1201</x>
      <y>711</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>req-&gt;next = NULL;
req-&gt;bh-&gt;b_dirt = 0;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1205</x>
      <y>706</y>
      <w>11</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1210</x>
      <y>706</y>
      <w>22</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
检查当前该设备是否存在request
即dev-&gt;current_request是否存在</panel_attributes>
    <additional_attributes>40.0;10.0;170.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1217</x>
      <y>709</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
当前该设备不存在request</panel_attributes>
    <additional_attributes>100.0;10.0;60.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1216</x>
      <y>714</y>
      <w>19</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>dev-&gt;current_request = req;
(dev-&gt;request_fn)();
return
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1226</x>
      <y>709</y>
      <w>25</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
当前设备已经存在request
则存进电梯队列中</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1238</x>
      <y>717</y>
      <w>65</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>if ((IN_ORDER(tmp,req) || 
    !IN_ORDER(tmp,tmp-&gt;next)) &amp;&amp;
	    IN_ORDER(req,tmp-&gt;next))
IN_ORDER会比较1.读写命令，
					2.设备号
					3.扇区号
注释：这里的电梯算法不是来回扫描，而是固定的由低到高扫描（这样可以防止2饥饿，试想在插入2之后一直插入大于2的数）
5,6,7 插入2  5,6,7,2 插入8    5,6,7,2,8 插入3    5,6,7,2,3,8 插入1    5,6,7,1,2,3,8插入4  5,6,7,1,2,3,4,8
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1260</x>
      <y>710</y>
      <w>19</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>req-&gt;next=tmp-&gt;next;
	tmp-&gt;next=req;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1226</x>
      <y>708</y>
      <w>45</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到插入位置后</panel_attributes>
    <additional_attributes>10.0;20.0;430.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1219</x>
      <y>724</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_hd_request</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1224</x>
      <y>719</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1223</x>
      <y>727</y>
      <w>27</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
error handling
blk_dev[MAJOR_NR].current_request
MAJOR(CURRENT-&gt;dev)
CURRENT-&gt;bh-&gt;b_lock</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1152</x>
      <y>739</y>
      <w>42</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>__asm__("divl %4":"=a" (block),"=d" (sec):"0" (block),"1" (0),
		"r" (hd_info[dev].sect));
	__asm__("divl %4":"=a" (cyl),"=d" (head):"0" (block),"1" (0),
		"r" (hd_info[dev].head));
	sec++;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1175</x>
      <y>733</y>
      <w>51</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
通过编号block计算物理上的cycle head sector</panel_attributes>
    <additional_attributes>490.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1223</x>
      <y>733</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1208</x>
      <y>737</y>
      <w>18</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
WRITE</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1223</x>
      <y>737</y>
      <w>12</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
READ</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1201</x>
      <y>752</y>
      <w>39</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>do_hd = intr_addr;
	outb_p(hd_info[drive].ctl,HD_CMD);
	port=HD_DATA;
	outb_p(hd_info[drive].wpcom&gt;&gt;2,++port);
	outb_p(nsect,++port);
	outb_p(sect,++port);
	outb_p(cyl,++port);
	outb_p(cyl&gt;&gt;8,++port);
	outb_p(0xA0|(drive&lt;&lt;4)|head,++port);
	outb(cmd,++port);
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1217</x>
      <y>745</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>hd_out</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1215</x>
      <y>739</y>
      <w>30</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
dev,nsect,sec,head,cyl,WIN_READ,&amp;read_intr</panel_attributes>
    <additional_attributes>180.0;10.0;110.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1222</x>
      <y>748</y>
      <w>3</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1200</x>
      <y>741</y>
      <w>31</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
dev,nsect,sec,head,cyl,WIN_WRITE,&amp;write_intr</panel_attributes>
    <additional_attributes>100.0;10.0;200.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1218</x>
      <y>688</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>wait_on_buffer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1151</x>
      <y>674</y>
      <w>75</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
这里如果更新了b_uptodate
会将存在读取数据的缓冲区返回</panel_attributes>
    <additional_attributes>10.0;10.0;730.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1223</x>
      <y>690</y>
      <w>38</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
此时进程1会sleepon，会强制跳到进程0执行
知道硬盘中断的产生</panel_attributes>
    <additional_attributes>10.0;20.0;360.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1254</x>
      <y>692</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>hd_interrupt</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1254</x>
      <y>695</y>
      <w>26</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将中断服务函数的地址放到edx中调用</panel_attributes>
    <additional_attributes>60.0;10.0;190.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1265</x>
      <y>697</y>
      <w>10</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1272</x>
      <y>697</y>
      <w>17</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1281</x>
      <y>703</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>read_intr</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1260</x>
      <y>702</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>write_intr</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1284</x>
      <y>706</y>
      <w>40</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
读到缓冲区</panel_attributes>
    <additional_attributes>10.0;10.0;380.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1317</x>
      <y>709</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>port_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1284</x>
      <y>706</y>
      <w>59</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
验证是否读完，
若没有读完，则设置服务程序地址
继续等待中断</panel_attributes>
    <additional_attributes>10.0;10.0;570.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1335</x>
      <y>710</y>
      <w>21</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>	CURRENT-&gt;errors = 0;
	CURRENT-&gt;buffer += 512;
	CURRENT-&gt;sector++;
	if (--CURRENT-&gt;nr_sectors) {
		do_hd = &amp;read_intr;
		return;
	}
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1312</x>
      <y>731</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>end_request</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1335</x>
      <y>730</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_hd_request</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1284</x>
      <y>706</y>
      <w>33</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
读完之后，结束请求，执行下一个请求</panel_attributes>
    <additional_attributes>10.0;10.0;310.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1314</x>
      <y>724</y>
      <w>4</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1314</x>
      <y>724</y>
      <w>29</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1303</x>
      <y>734</y>
      <w>20</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
唤醒request等待进程
</panel_attributes>
    <additional_attributes>150.0;10.0;80.0;80.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1296</x>
      <y>744</y>
      <w>22</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>wake_up(&amp;CURRENT-&gt;waiting);
wake_up(&amp;wait_for_request);
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1320</x>
      <y>744</y>
      <w>22</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>CURRENT-&gt;dev = -1;
	CURRENT = CURRENT-&gt;next;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1317</x>
      <y>734</y>
      <w>16</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
执行下一个request</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1284</x>
      <y>734</y>
      <w>36</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
更新数据更新为b_uptodate
解锁buffer</panel_attributes>
    <additional_attributes>340.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1265</x>
      <y>744</y>
      <w>29</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>CURRENT-&gt;bh-&gt;b_uptodate = uptodate;
unlock_buffer(CURRENT-&gt;bh);
unlock_buffer唤醒缓冲区等待进程
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1290</x>
      <y>753</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>wake_up</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1295</x>
      <y>749</y>
      <w>14</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1292</x>
      <y>756</y>
      <w>6</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1278</x>
      <y>759</y>
      <w>33</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>(**p).state=TASK_RUNNING
当do_hd_request之后会进到怠速进程0
然后会在pause中进行shedule，然后切换成进程1
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1279</x>
      <y>749</y>
      <w>18</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1181</x>
      <y>647</y>
      <w>27</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
判断引导块是否满足要求"55AA"
然后设置分区信息，释放缓冲区</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1180</x>
      <y>667</y>
      <w>13</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1160</x>
      <y>670</y>
      <w>27</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>hd[i+5*drive].start_sect = p-&gt;start_sect;
			hd[i+5*drive].nr_sects = p-&gt;nr_sects;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>666</y>
      <w>15</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1196</x>
      <y>669</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>brelse</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1188</x>
      <y>674</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>wait_on_buffer
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>671</y>
      <w>11</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
等待buffer解锁
</panel_attributes>
    <additional_attributes>90.0;20.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1203</x>
      <y>678</y>
      <w>21</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>buf-&gt;b_count--
这里不明白if (!(buf-&gt;b_count--))
这里有（），应该是先减后用
bg=red
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1201</x>
      <y>672</y>
      <w>11</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1232</x>
      <y>674</y>
      <w>18</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>wake_up(&amp;buffer_wait)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1201</x>
      <y>671</y>
      <w>40</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
通知等待空闲buffer的进程
</panel_attributes>
    <additional_attributes>10.0;20.0;380.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1182</x>
      <y>647</y>
      <w>76</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
软盘读取</panel_attributes>
    <additional_attributes>10.0;10.0;740.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1248</x>
      <y>665</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>rd_load</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1183</x>
      <y>647</y>
      <w>162</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
挂载根文件系统</panel_attributes>
    <additional_attributes>10.0;10.0;1600.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1265</x>
      <y>675</y>
      <w>48</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>bh = breada(ROOT_DEV,block+1,block,block+2,-1);
*((struct d_super_block *) &amp;s) = *((struct d_super_block *) bh-&gt;b_data)
cp = rd_start;
(void) memcpy(cp, bh-&gt;b_data, BLOCK_SIZE);
brelse(bh);
ROOT_DEV=0x0101
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1253</x>
      <y>668</y>
      <w>36</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将文件系统相关的复制到虚拟盘</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1803</x>
      <y>734</y>
      <w>52</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>tmp = (char *)get_fs_long(((unsigned long *)argv)+argc)
if (!(pag = (char *) page[p/PAGE_SIZE]) &amp;&amp;
				    !(pag = (char *) page[p/PAGE_SIZE] =
				      (unsigned long *) get_free_page())) 

*(pag + offset) = get_fs_byte(tmp)
注释：
1.因为get_fs_long和get_fs_byte都用到了段地址fs，
所以需要注意字符串数组和字符串在内存空间还是用户空间，这样
才不会被权限所限制，注意fs和ds都在中断过程中有设置ds=0x10
fs=0x	7
2.注意字符串数组和字符串都是从后向前进行复制到页面地址（也是从后向前复制）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1338</x>
      <y>672</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>mount_root</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1324</x>
      <y>683</y>
      <w>20</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>file_table[i].f_count=0;
super_block-&gt;s_dev = 0;
super_block-&gt;s_lock = 0;
super_block-&gt;s_wait = NULL;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1330</x>
      <y>676</y>
      <w>21</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
初始化file_table,8个super_block</panel_attributes>
    <additional_attributes>150.0;10.0;50.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1355</x>
      <y>682</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>read_super</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1344</x>
      <y>676</y>
      <w>19</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
ROOT_DEV</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1346</x>
      <y>688</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_super</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1351</x>
      <y>685</y>
      <w>12</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1342</x>
      <y>691</y>
      <w>10</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1300</x>
      <y>696</y>
      <w>48</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>1.遍历整个super_block，找到s-&gt;s_dev == dev的块
2.如果找到，则wait_on_super查看是否上锁，如果上锁，则sleep_on等待
3.如果没找到，则return NULL
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>685</y>
      <w>30</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
get_super找到了则，return 相应的super_block
否则继续执行</panel_attributes>
    <additional_attributes>90.0;10.0;200.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>689</y>
      <w>27</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到空闲的super_block（s-&gt;s_dev==0）</panel_attributes>
    <additional_attributes>200.0;10.0;60.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1352</x>
      <y>697</y>
      <w>27</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>	for (s = 0+super_block ;; s++) {
		if (s &gt;= NR_SUPER+super_block)
			return NULL;
		if (!s-&gt;s_dev)
			break;
	}
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1371</x>
      <y>689</y>
      <w>24</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到super_block</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1384</x>
      <y>695</y>
      <w>13</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
初始化super_block</panel_attributes>
    <additional_attributes>90.0;10.0;30.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1380</x>
      <y>700</y>
      <w>17</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>s-&gt;s_dev = dev;
s-&gt;s_isup = NULL;
s-&gt;s_imount = NULL;
s-&gt;s_time = 0;
s-&gt;s_rd_only = 0;
s-&gt;s_dirt = 0;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1392</x>
      <y>695</y>
      <w>20</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1403</x>
      <y>700</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lock_super</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1399</x>
      <y>706</y>
      <w>17</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>cli();
while (sb-&gt;s_lock)
	sleep_on(&amp;(sb-&gt;s_wait));
sb-&gt;s_lock = 1;
sti();
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1406</x>
      <y>703</y>
      <w>4</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1392</x>
      <y>695</y>
      <w>35</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1419</x>
      <y>699</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>bread</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1419</x>
      <y>707</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_rd_request</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1424</x>
      <y>702</y>
      <w>29</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
在虚拟内存初始化rd_init时和下面函数挂接
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1418</x>
      <y>713</y>
      <w>31</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>addr = rd_start + (CURRENT-&gt;sector &lt;&lt; 9);
len = CURRENT-&gt;nr_sectors &lt;&lt; 9;
memcpy(CURRENT-&gt;buffer,addr,len)
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1423</x>
      <y>710</y>
      <w>5</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1391</x>
      <y>695</y>
      <w>99</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
读取超级块中的数据
读取i_node位图和逻辑位图
如果其中有一个读不到，就释放所有的读取
</panel_attributes>
    <additional_attributes>10.0;10.0;970.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1455</x>
      <y>700</y>
      <w>45</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>*((struct d_super_block *) s) =*((struct d_super_block *) bh-&gt;b_data)
s-&gt;s_imap[i]=bread(dev,block)
s-&gt;s_zmap[i]=bread(dev,block)
s-&gt;s_imap[0]-&gt;b_data[0] |= 1;
s-&gt;s_zmap[0]-&gt;b_data[0] |= 1;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1505</x>
      <y>703</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>free_super</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1392</x>
      <y>694</y>
      <w>122</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;1000.0;20.0;1200.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1502</x>
      <y>709</y>
      <w>17</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>cli();
sb-&gt;s_lock = 0;
wake_up(&amp;(sb-&gt;s_wait));
sti();
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1509</x>
      <y>706</y>
      <w>5</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1485</x>
      <y>677</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>iget</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1342</x>
      <y>674</y>
      <w>150</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
ROOT_DEV，ROOT_INO</panel_attributes>
    <additional_attributes>10.0;20.0;1480.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1474</x>
      <y>681</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_empty_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1411</x>
      <y>685</y>
      <w>62</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>1.找到一个last_inode-&gt;i_count=0的inode，如果所有的inode的count都不等于0，则报错，否则继续
2.其中找到inode-&gt;i_dirt=0 &amp;&amp; inode-&gt;i_lock=0的inode，如果没找到，则选择第一个inode_table
3.检查inode-&gt;i_lock 和inode-&gt;i_dirt（之后详述write_inode）
4.这种查找inode直到inode-&gt;i_count=0
5.	memset(inode,0,sizeof(*inode));
	inode-&gt;i_count = 1;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1480</x>
      <y>680</y>
      <w>11</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>682</y>
      <w>12</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1491</x>
      <y>682</y>
      <w>3</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1476</x>
      <y>688</y>
      <w>51</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>1.查找inode_table中inode-&gt;i_dev= dev inode-&gt;i_num = nr的节点
2.如果找到了，检查这个有没有mount到super_blocks上（之后详述，这里不展开）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1490</x>
      <y>680</y>
      <w>4</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1491</x>
      <y>682</y>
      <w>44</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果没找到</panel_attributes>
    <additional_attributes>10.0;10.0;420.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1528</x>
      <y>690</y>
      <w>15</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>inode=empty;
inode-&gt;i_dev = dev;
inode-&gt;i_num = nr;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1530</x>
      <y>685</y>
      <w>5</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1531</x>
      <y>685</y>
      <w>18</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1544</x>
      <y>691</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>read_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1528</x>
      <y>699</y>
      <w>64</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lock_inode(inode)
block = 2 + sb-&gt;s_imap_blocks + sb-&gt;s_zmap_blocks +(inode-&gt;i_num-1)/INODES_PER_BLOCK;
bh=bread(inode-&gt;i_dev,block)
*(struct d_inode *)inode =((struct d_inode *)bh-&gt;b_data)[(inode-&gt;i_num-1)%INODES_PER_BLOCK];
brelse(bh);
unlock_inode(inode);
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1546</x>
      <y>694</y>
      <w>20</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
从虚拟盘中读取inode数据</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1342</x>
      <y>668</y>
      <w>166</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将inode挂在在superblock上</panel_attributes>
    <additional_attributes>10.0;80.0;1640.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1502</x>
      <y>669</y>
      <w>50</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>inode-&gt;i_count += 3 ;	/* NOTE! it is logically used 4 times, not 1 */
superblock-&gt;s_isup =superblock-&gt;s_imount = inode;
current-&gt;pwd = inode;
current-&gt;root = inode;
检测有多少逻辑块和inode节点是空闲的
!set_bit(i&amp;8191,p-&gt;s_zmap[i&gt;&gt;13]-&gt;b_data)
!set_bit(i&amp;8191,p-&gt;s_imap[i&gt;&gt;13]-&gt;b_data)
注意:8191的16进制是0x1FFF(13位，刚好对应上i&gt;&gt;13，这里用13是因为data的长度是1024*8bit)
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1183</x>
      <y>647</y>
      <w>129</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果不是进程0
如果该进程的信号位图中阻塞信号存在</panel_attributes>
    <additional_attributes>10.0;10.0;1270.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1304</x>
      <y>660</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_signal</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1553</x>
      <y>632</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>open</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1557</x>
      <y>610</y>
      <w>140</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
"/dev/tty0",O_RDWR,0</panel_attributes>
    <additional_attributes>1380.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1533</x>
      <y>635</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>system_call
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1536</x>
      <y>634</y>
      <w>25</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>230.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1515</x>
      <y>642</y>
      <w>38</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_open
（inode存储在（current-&gt;filp[fd].f_inode）中）</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1530</x>
      <y>638</y>
      <w>10</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>90.0;10.0;18.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1474</x>
      <y>655</y>
      <w>43</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>1.在进程的filp数组中找到空闲的位置（current-&gt;filp[fd]=NULL）fd
	并且使current-&gt;close_on_exec &amp;= ~(1&lt;&lt;fd)
2.在file_table中找到空闲的位置（f-&gt;f_count=0）
3.(current-&gt;filp[fd]=f)-&gt;f_count++;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1556</x>
      <y>652</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>open_namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1544</x>
      <y>658</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>dir_namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1566</x>
      <y>665</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_dir</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1571</x>
      <y>668</y>
      <w>32</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
检测当前进程是否挂接了跟文件和当前位置
判断是绝对路径还是相对路径</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1559</x>
      <y>684</y>
      <w>24</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>if ((c=get_fs_byte(pathname))=='/') {
		inode = current-&gt;root;
		pathname++;
	} else if (c)
		inode = current-&gt;pwd;
inode-&gt;i_count++
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1571</x>
      <y>668</y>
      <w>36</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISDIR &amp;&amp; permission</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1583</x>
      <y>679</y>
      <w>43</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>for(namelen=0;(c=get_fs_byte(pathname++))&amp;&amp;(c!='/');namelen++)
直到遍历完文件名字，或文件夹名字
如果找到文件，直接return inode
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1571</x>
      <y>668</y>
      <w>59</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果是文件夹
&amp;inode,thisname,namelen,&amp;de</panel_attributes>
    <additional_attributes>10.0;10.0;570.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1622</x>
      <y>674</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_entry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1618</x>
      <y>677</y>
      <w>35</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
查看该目录存在多少（name，inode）的组合</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1590</x>
      <y>690</y>
      <w>33</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>entries = (*dir)-&gt;i_size / (sizeof (struct dir_entry))
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1627</x>
      <y>677</y>
      <w>16</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;190.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1619</x>
      <y>696</y>
      <w>87</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>1.读取inode中所有的block号，遍历block中所有的name，看是否和要找的name一致（match(namelen,name,de)）
	如果一致，则返回对应的（name，inode）组合
2.如果没有找到，将entry++，并计算其所在i_zone中的位置，从而得出所在的block，然后继续1的过程
注释：
1.inode中有i_zone,i_zone中有该文件夹/文件数据的block号，文件夹的block中存储的是3所述的内容，文件block中存储的是2所述的内容
2.inode.i_zone[0-6]存储了直接块号，i_zone[7]存储了一阶索引块号，i_zone[8]存储了二阶索引块号（分析bmap函数可知）
3.如果inode是一个文件夹，其中存储了（文件名，inode的编号），1个block中含有DIR_ENTRIES_PER_BLOCK个这样的节点
4.如果inode是一个文件，其中存储了字符流
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1572</x>
      <y>668</y>
      <w>75</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;690.0;50.0;730.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1641</x>
      <y>685</y>
      <w>40</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>inr = de-&gt;inode
idev = inode-&gt;i_dev;
brelse(bh);
iput(inode)
inode = iget(idev,inr)
知道运行到找到文件，返回包含该文件的文件夹对应的inode
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1549</x>
      <y>661</y>
      <w>26</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1549</x>
      <y>661</y>
      <w>140</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1380.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1683</x>
      <y>675</y>
      <w>62</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>注释：
1.pathname传到getdir之后，虽然在getdir中++，但是只能改pathname地址所对应位置上的值，
而不能改变dir_namei函数中pathname的值，并且pathname所指向的值用const修饰，并不能改变
所以不论是地址还是地址中的值都不会改变
2.注意解析方法：name是文件的名字，namelen是文件字符串的长度
while (c=get_fs_byte(pathname++))
		if (c=='/')
			basename=pathname;
	*namelen = pathname-basename-1;
	*name = basename;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1550</x>
      <y>655</y>
      <w>13</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1560</x>
      <y>655</y>
      <w>21</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1572</x>
      <y>658</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_entry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1583</x>
      <y>659</y>
      <w>65</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到对应的（name，inode）组合</panel_attributes>
    <additional_attributes>10.0;10.0;630.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1646</x>
      <y>657</y>
      <w>29</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>inr = de-&gt;inode;
dev = dir-&gt;i_dev;
brelse(bh);
iput(dir);
inode=iget(dev,inr);
dir-&gt;i_atime=CURRENT_TIME;
*res_inode = inode（返回文件的inode）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1561</x>
      <y>653</y>
      <w>87</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;30.0;790.0;10.0;850.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1688</x>
      <y>651</y>
      <w>23</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>f-&gt;f_mode = inode-&gt;i_mode;
f-&gt;f_flags = flag;(文件读写的属性)
f-&gt;f_count = 1;
f-&gt;f_inode = inode;
f-&gt;f_pos = 0;
return (fd);
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1494</x>
      <y>645</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>500.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1543</x>
      <y>645</y>
      <w>154</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1520.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1543</x>
      <y>645</y>
      <w>20</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1645</x>
      <y>625</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>dup</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1631</x>
      <y>629</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>system_call
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1636</x>
      <y>628</y>
      <w>19</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1618</x>
      <y>634</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_dup</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1622</x>
      <y>632</y>
      <w>18</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1597</x>
      <y>634</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>dupfd</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1607</x>
      <y>634</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1579</x>
      <y>637</y>
      <w>26</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1566</x>
      <y>639</y>
      <w>32</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>找到current-&gt;filp中空闲的项
	并让current-&gt;close_on_exec &amp;= ~(1&lt;&lt;arg);
	(current-&gt;filp[arg] = current-&gt;filp[fd])-&gt;f_count++;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1684</x>
      <y>610</y>
      <w>15</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1679</x>
      <y>622</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>fork</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1824</x>
      <y>617</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>waitpid</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1696</x>
      <y>610</y>
      <w>134</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;1320.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1827</x>
      <y>623</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_syscall3
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>620</y>
      <w>5</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1824</x>
      <y>631</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_waitpid</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1826</x>
      <y>626</y>
      <w>10</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
-1,wait_stat,0
</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1543</x>
      <y>645</y>
      <w>97</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISCHR(inode-&gt;i_mode)
如果使字符设备</panel_attributes>
    <additional_attributes>10.0;10.0;950.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1637</x>
      <y>650</y>
      <w>52</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
MAJOR(inode-&gt;i_zone[0])==4
&amp;&amp;current-&gt;leader &amp;&amp; current-&gt;tty&lt;0</panel_attributes>
    <additional_attributes>10.0;10.0;450.0;50.0;500.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1681</x>
      <y>663</y>
      <w>32</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>current-&gt;tty = MINOR(inode-&gt;i_zone[0]);
tty_table[current-&gt;tty].pgrp = current-&gt;pgrp;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1812</x>
      <y>634</y>
      <w>21</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
滤出当前进程的子进程</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1812</x>
      <y>646</y>
      <w>21</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>if (!*p || *p == current)
	continue;
if ((*p)-&gt;father != current-&gt;pid)
	continue;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>634</y>
      <w>40</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
default
</panel_attributes>
    <additional_attributes>10.0;10.0;380.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1861</x>
      <y>642</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>flag=1
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1874</x>
      <y>640</y>
      <w>33</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>current-&gt;state=TASK_INTERRUPTIBLE;
schedule();
注释：这里由进程1切换到进程2，同进程0切换到
进程1相同，因为在copy_process中，ip指针
设置成父进程的ip地址，eax设置成0，所以进程2
将在fork的地方返回，并且返回值是0
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>634</y>
      <w>49</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1685</x>
      <y>625</y>
      <w>44</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
返回值是0，进程2开始的地方</panel_attributes>
    <additional_attributes>10.0;10.0;420.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1696</x>
      <y>638</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>close(0)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1700</x>
      <y>635</y>
      <w>29</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>270.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1695</x>
      <y>644</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>system_call
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1701</x>
      <y>641</y>
      <w>4</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1700</x>
      <y>646</y>
      <w>17</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1716</x>
      <y>660</y>
      <w>32</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>current-&gt;close_on_exec &amp;= ~(1&lt;&lt;fd)
current-&gt;filp[fd] = NULL
--filp-&gt;f_count
iput(filp-&gt;f_inode)（目前了解：将inode.i_count--）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1721</x>
      <y>640</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>open</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1726</x>
      <y>635</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
"/etc/rc",O_RDONLY,0</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1791</x>
      <y>636</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_exit</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1726</x>
      <y>634</y>
      <w>73</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
2（这里应该是进不来的，因为在执行execv过程中，已经将ip和sp改了）
</panel_attributes>
    <additional_attributes>10.0;20.0;710.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1794</x>
      <y>643</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>system_call
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1798</x>
      <y>639</y>
      <w>3</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1797</x>
      <y>649</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_exit</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1799</x>
      <y>646</y>
      <w>6</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1802</x>
      <y>657</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_exit</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1803</x>
      <y>652</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
(error_code&amp;0xff)&lt;&lt;8</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1758</x>
      <y>639</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>execve</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1726</x>
      <y>635</y>
      <w>37</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
"/bin/sh",argv_rc,envp_rc</panel_attributes>
    <additional_attributes>10.0;10.0;350.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1759</x>
      <y>646</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>system_call
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1762</x>
      <y>642</y>
      <w>7</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1759</x>
      <y>653</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_execve</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1763</x>
      <y>649</y>
      <w>5</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1756</x>
      <y>674</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_execve</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1762</x>
      <y>656</y>
      <w>5</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1714</x>
      <y>647</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_close</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1718</x>
      <y>650</y>
      <w>10</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>677</y>
      <w>55</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
(0xffff &amp; eip[1]) == 0x000f</panel_attributes>
    <additional_attributes>380.0;10.0;370.0;230.0;10.0;340.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1713</x>
      <y>710</y>
      <w>14</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1707</x>
      <y>713</y>
      <w>9</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>page[i]=0
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1717</x>
      <y>714</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>namei
(得到节点的inode)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1723</x>
      <y>710</y>
      <w>4</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1703</x>
      <y>721</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>dir_namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1717</x>
      <y>721</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_entry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1732</x>
      <y>721</y>
      <w>21</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>inr = de-&gt;inode;
dev = dir-&gt;i_dev;
brelse(bh);
iput(dir);
dir=iget(dev,inr);
if (dir) {
	dir-&gt;i_atime=CURRENT_TIME;
	dir-&gt;i_dirt=1;
}
return dir;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1708</x>
      <y>717</y>
      <w>17</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1722</x>
      <y>717</y>
      <w>3</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1722</x>
      <y>717</y>
      <w>21</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1747</x>
      <y>714</y>
      <w>11</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>count</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>710</y>
      <w>30</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;280.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1753</x>
      <y>717</y>
      <w>5</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1754</x>
      <y>722</y>
      <w>21</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>计算argv和envp中参数的个数
分别记为argc和envc
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>710</y>
      <w>64</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;10.0;620.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>710</y>
      <w>74</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
inode-&gt;i_dev,inode-&gt;i_zone[0]</panel_attributes>
    <additional_attributes>10.0;10.0;720.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1758</x>
      <y>715</y>
      <w>34</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>解析imode看是否符合执行shell的权限（之后详述）
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1792</x>
      <y>715</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>bread</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>710</y>
      <w>88</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;860.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1793</x>
      <y>722</y>
      <w>30</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>strncpy(buf, bh-&gt;b_data+2, 1022);
brelse(bh);
iput(inode);
buf[1022] = '\0';
interp 指向#！的第一个非空格/制表符的字符
i_name指向文件的第一个字符
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1803</x>
      <y>713</y>
      <w>9</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1826</x>
      <y>724</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>copy_strings</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1807</x>
      <y>713</y>
      <w>29</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
复制相应的环境变量和解释器到相应的页面
</panel_attributes>
    <additional_attributes>30.0;10.0;250.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1824</x>
      <y>727</y>
      <w>10</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>710</y>
      <w>140</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
进行magic的检查，blocksize的检查等
如果没有解释器，copy相应的环境变量和参数
</panel_attributes>
    <additional_attributes>10.0;10.0;1380.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1857</x>
      <y>714</y>
      <w>27</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>if (current-&gt;executable)
	iput(current-&gt;executable);
current-&gt;executable = inode;
current-&gt;sigaction[i].sa_handler = NUL
if ((current-&gt;close_on_exec&gt;&gt;i)&amp;1)
	sys_close(i);
current-&gt;close_on_exec = 0;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1893</x>
      <y>719</y>
      <w>15</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>free_page_tables</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1725</x>
      <y>709</y>
      <w>177</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;1600.0;20.0;1750.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1888</x>
      <y>722</y>
      <w>18</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
传参：段基地址，段限长</panel_attributes>
    <additional_attributes>120.0;10.0;50.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1861</x>
      <y>736</y>
      <w>40</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>dir = (unsigned long *) ((from&gt;&gt;20) &amp; 0xffc) 页目录的位置
pg_table = (unsigned long *) (0xfffff000 &amp; *dir) 页表项的位置
*pg_table = 0		释放对应的页表项管理
free_page(0xfffff000 &amp; *dir) 释放对应的页表项给memmap
*dir = 0				释放对应的页目录管理
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1879</x>
      <y>728</y>
      <w>16</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1892</x>
      <y>728</y>
      <w>20</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将页表（实际物理地址）释放
</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1903</x>
      <y>738</y>
      <w>17</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>free_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1906</x>
      <y>745</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>addr -= LOW_MEM;
addr &gt;&gt;= 12;
mem_map[addr]=0;
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1912</x>
      <y>741</y>
      <w>3</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>707</y>
      <w>212</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将p的物理长度转化成虚拟的长度
</panel_attributes>
    <additional_attributes>10.0;40.0;1750.0;10.0;2100.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1926</x>
      <y>717</y>
      <w>15</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>change_ldt</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1918</x>
      <y>720</y>
      <w>21</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
重新设置ldt的代码段和数据段
</panel_attributes>
    <additional_attributes>140.0;10.0;60.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1921</x>
      <y>729</y>
      <w>28</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>code_limit = text_size+PAGE_SIZE -1;
code_limit &amp;= 0xFFFFF000;
data_limit = 0x4000000;
code_base = get_base(current-&gt;ldt[1]);
data_base = code_base;
set_base(current-&gt;ldt[1],code_base);
set_limit(current-&gt;ldt[1],code_limit);
set_base(current-&gt;ldt[2],data_base);
set_limit(current-&gt;ldt[2],data_limit);
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1957</x>
      <y>733</y>
      <w>17</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>put_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1931</x>
      <y>720</y>
      <w>37</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置物理地址和虚拟地址的映射
page：物理地址，对应页表
address：虚拟地址</panel_attributes>
    <additional_attributes>10.0;10.0;350.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1950</x>
      <y>740</y>
      <w>59</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>page_table = (unsigned long *) ((address&gt;&gt;20) &amp; 0xffc);找到改虚拟地址对应的页目录项
page_table = (unsigned long *) (0xfffff000 &amp; *page_table)找到虚拟地址对应的页表项
page_table[(address&gt;&gt;12) &amp; 0x3ff] = page | 7（将页表项里面的地址设置成为实际的物理地址）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>736</y>
      <w>8</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1958</x>
      <y>716</y>
      <w>15</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>create_tables</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1724</x>
      <y>705</y>
      <w>242</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;60.0;2030.0;10.0;2400.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1960</x>
      <y>723</y>
      <w>32</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>用于重新构建栈
栈中有argc，argv的二重指针和envp的二重指针
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>719</y>
      <w>8</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1725</x>
      <y>703</y>
      <w>274</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;80.0;2310.0;10.0;2720.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1993</x>
      <y>718</y>
      <w>51</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>current-&gt;brk = ex.a_bss +
	(current-&gt;end_data = ex.a_data +
	(current-&gt;end_code = ex.a_text));
current-&gt;start_stack = p &amp; 0xfffff000;
current-&gt;euid = e_uid;
current-&gt;egid = e_gid;
i = ex.a_text+ex.a_data;
while (i&amp;0xfff)
	put_fs_byte(0,(char *) (i++));
eip[0] = ex.a_entry;		
eip[3] = p;		
注释：eip是指向syscall中断的过程中存储的ip，向上依次是cs，eflag，sp，ss	
bg=red
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1768</x>
      <y>649</y>
      <w>25</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
system_call ret之后会返回
shell程序的ip和sp，但是因为
没有将shell程序copy到相应的page中
所以出现页异常
</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1786</x>
      <y>657</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_page_fault</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1781</x>
      <y>685</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_do_no_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1786</x>
      <y>660</y>
      <w>9</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1793</x>
      <y>696</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_free_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1785</x>
      <y>688</y>
      <w>16</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1806</x>
      <y>696</y>
      <w>27</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>nr[i] = bmap(current-&gt;executable,block);
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1785</x>
      <y>688</y>
      <w>34</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1767</x>
      <y>696</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_empty_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1780</x>
      <y>696</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>share_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1763</x>
      <y>688</y>
      <w>33</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
!current-&gt;executable || tmp &gt;= current-&gt;end_data
</panel_attributes>
    <additional_attributes>230.0;10.0;90.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1785</x>
      <y>688</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1836</x>
      <y>696</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>bread_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1786</x>
      <y>688</y>
      <w>56</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
一次性读一页的数据
</panel_attributes>
    <additional_attributes>10.0;10.0;540.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1850</x>
      <y>695</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>put_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1785</x>
      <y>688</y>
      <w>73</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将申请来的page加入到该task的页表管理中
</panel_attributes>
    <additional_attributes>10.0;10.0;710.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1792</x>
      <y>660</y>
      <w>10</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1796</x>
      <y>664</y>
      <w>52</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>page_fault中断返回后执行shell程序参考linux内核设计的艺术 p196 4.4节，
1.主要实现创建update进程（/etc/update）,创建过程与进程1创建进程2的过程类似
	用于将缓冲区的内容更新至外设中，会每隔一段时间被唤醒
2.将字符串写入虚拟盘中的（/etc/mtab）中
3.执行sys_read（filp[0]=/etc/rc）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1813</x>
      <y>676</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1813</x>
      <y>672</y>
      <w>10</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1807</x>
      <y>679</y>
      <w>36</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISDIR(inode-&gt;i_mode) || S_ISREG(inode-&gt;i_mode)
普通文件</panel_attributes>
    <additional_attributes>140.0;10.0;210.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1823</x>
      <y>683</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>file_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1836</x>
      <y>689</y>
      <w>32</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>之后详述，这里据书中所说，会return -ERROR
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>686</y>
      <w>12</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1845</x>
      <y>656</y>
      <w>33</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;320.0;90.0;30.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1875</x>
      <y>654</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_exit</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1852</x>
      <y>681</y>
      <w>16</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>free_page_tables</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1859</x>
      <y>657</y>
      <w>24</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
释放代码段和数据段
</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1873</x>
      <y>657</y>
      <w>18</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
将当前结束进程的
子进程的父进程
设置为进程1
</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1870</x>
      <y>681</y>
      <w>25</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>task[i]-&gt;father = 1;
if (task[i]-&gt;state == TASK_ZOMBIE)
	/* assumption task[1] is always init */
	(void) send_sig(SIGCHLD, task[1], 1);
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1881</x>
      <y>657</y>
      <w>22</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
关闭所有进程
</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1893</x>
      <y>669</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_close(i)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1897</x>
      <y>684</y>
      <w>25</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>current-&gt;close_on_exec &amp;= ~(1&lt;&lt;fd);
filp = current-&gt;filp[fd]
current-&gt;filp[fd] = NULL
--filp-&gt;f_count
iput(filp-&gt;f_inode);
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1899</x>
      <y>672</y>
      <w>9</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1908</x>
      <y>665</y>
      <w>25</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>iput(current-&gt;pwd);
current-&gt;pwd=NULL;
iput(current-&gt;root);
current-&gt;root=NULL;
iput(current-&gt;executable);
current-&gt;executable=NULL;
if (current-&gt;leader &amp;&amp; current-&gt;tty &gt;= 0)
	tty_table[current-&gt;tty].pgrp = 0;
if (last_task_used_math == current)
	last_task_used_math = NULL;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1881</x>
      <y>657</y>
      <w>39</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1936</x>
      <y>667</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>kill_session</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1882</x>
      <y>657</y>
      <w>60</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
current-&gt;leader</panel_attributes>
    <additional_attributes>10.0;10.0;580.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1940</x>
      <y>670</y>
      <w>28</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
遍历整个task_struct
*p &amp;&amp; (*p)-&gt;session == current-&gt;session
</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1937</x>
      <y>676</y>
      <w>21</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>(*p)-&gt;signal |= 1&lt;&lt;(SIGHUP-1)
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1881</x>
      <y>657</y>
      <w>83</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;810.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1955</x>
      <y>667</y>
      <w>21</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>current-&gt;state = TASK_ZOMBIE;
current-&gt;exit_code = code;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1978</x>
      <y>666</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>tell_father</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1881</x>
      <y>657</y>
      <w>105</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
current-&gt;father</panel_attributes>
    <additional_attributes>10.0;10.0;1030.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1993</x>
      <y>666</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>schedule</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1881</x>
      <y>657</y>
      <w>121</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;1190.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1983</x>
      <y>669</y>
      <w>15</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
设置父进程的signal</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1969</x>
      <y>673</y>
      <w>24</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>task[i]-&gt;signal |= (1&lt;&lt;(SIGCHLD-1))
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1696</x>
      <y>610</y>
      <w>178</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
再次创建进程4 shell进程（update进程是进程3，），pid=4
但是位置在task_struct的2号位
</panel_attributes>
    <additional_attributes>10.0;10.0;1760.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1826</x>
      <y>614</y>
      <w>28</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
进程1因为进程2发送的SIGCHLD而被唤醒
</panel_attributes>
    <additional_attributes>100.0;50.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1846</x>
      <y>619</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>fork</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1848</x>
      <y>614</y>
      <w>25</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1907</x>
      <y>617</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>wait</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1870</x>
      <y>614</y>
      <w>42</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;400.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1869</x>
      <y>614</y>
      <w>13</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
进程4开始运行</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1854</x>
      <y>623</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>close</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1858</x>
      <y>619</y>
      <w>14</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
0，1，2
</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>634</y>
      <w>11</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
TASK_ZOMBIE
</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1835</x>
      <y>640</y>
      <w>21</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>current-&gt;cutime += (*p)-&gt;utime;
current-&gt;cstime += (*p)-&gt;stime;
flag = (*p)-&gt;pid;
code = (*p)-&gt;exit_code;
release(*p);
（在release中 task[i]=NULL; 
free_page((long)p); 
schedule();）
put_fs_long(code,stat_addr);
return flag;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1868</x>
      <y>622</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>setsid</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1869</x>
      <y>619</y>
      <w>4</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1870</x>
      <y>628</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_syscall0
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1871</x>
      <y>625</y>
      <w>7</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1886</x>
      <y>631</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_setsid</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1882</x>
      <y>630</y>
      <w>6</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1893</x>
      <y>632</y>
      <w>23</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
!(current-&gt;leader &amp;&amp; !suser())</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1914</x>
      <y>640</y>
      <w>31</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>current-&gt;leader = 1;
current-&gt;session = current-&gt;pgrp = current-&gt;pid;
current-&gt;tty = -1;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1885</x>
      <y>624</y>
      <w>24</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>(void) open("/dev/tty0",O_RDWR,0);
(void) dup(0);
(void) dup(0);
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1869</x>
      <y>619</y>
      <w>18</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1913</x>
      <y>625</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>execve</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1869</x>
      <y>619</y>
      <w>49</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
"/bin/sh",argv,envp</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1931</x>
      <y>624</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_exit</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1869</x>
      <y>619</y>
      <w>66</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;640.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1915</x>
      <y>626</y>
      <w>24</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
和进程2执行shell程序的过程一样，
但是这次打开的是flip[0]=/dev/tty0
</panel_attributes>
    <additional_attributes>60.0;10.0;170.0;50.0;190.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1931</x>
      <y>632</y>
      <w>8</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1935</x>
      <y>635</y>
      <w>22</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISCHR(inode-&gt;i_mode)
字符设备</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1949</x>
      <y>640</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>rw_char</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1956</x>
      <y>648</y>
      <w>11</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>crw_table
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1949</x>
      <y>643</y>
      <w>18</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
字符设备
i_zone[0]中存储的是设备号</panel_attributes>
    <additional_attributes>50.0;10.0;120.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>651</y>
      <w>14</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
/dev/ttyx</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1966</x>
      <y>654</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>rw_ttyx</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1983</x>
      <y>658</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>tty_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1973</x>
      <y>657</y>
      <w>17</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1647</x>
      <y>610</y>
      <w>52</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>500.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>529</x>
      <y>325</y>
      <w>11</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_mount</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>476</x>
      <y>328</y>
      <w>59</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.通过dir_namei找到最后一个目录的inode
2.通过find_entry找到从目录的inode中找到文件的（inode号，name）序列
3.通过目录inode中的设备号，和文件的inode号，通过iget找到文件的inode</panel_attributes>
    <additional_attributes>570.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>471</x>
      <y>339</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>435</x>
      <y>347</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>dir_namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>441</x>
      <y>341</y>
      <w>33</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
获取文件最后一个目录的i_node
basename:将返回文件的名字
namelen：返回文件名字的长度</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>409</x>
      <y>359</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_dir</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>402</x>
      <y>349</y>
      <w>50</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.找到开始节点（root/pwd）
2.不断的解析目录名，遇到文件名，返回其上一级目录名
3.如果遇到目录名，通过find_entry，去硬盘中查找其dir结构（inode号，名字）
4.然后通过inode号和dev去得到该目录的inode（iget）</panel_attributes>
    <additional_attributes>340.0;10.0;150.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>346</x>
      <y>376</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_entry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>454</x>
      <y>380</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>iget</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>354</x>
      <y>362</y>
      <w>61</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.通过inode中的izone找到block号，然后读取该block中的数据
2.通过match对比要找文件的名字和dir中的名字，找到之后返回dir的inode
3.如果没找到，并且该block读完了，然后通过bmap找到其他的block号，然后再读取
	重复2的过程，直到找到相应的dir（name和要查的名字相同）
4.如果遍历完整个izone都没找到对应的文件，则返回Null.</panel_attributes>
    <additional_attributes>590.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>413</x>
      <y>362</y>
      <w>52</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.通过get_empty_inode在inode_table中找到空闲的inode位置
2.在inode_table中查找（i_dev i_num），如果找到的inode
挂接了文件系统，则遍历super_block，找到挂接
该inode的super_block,并将设备替换成
super_block的设备号，和根节点号ROOT_INO
3.如果在inode_table中找到了inode，则释放1中申请的empty，返回找到的inode
4.如果没找到，利用empty位置通过read_inode去block中找到相应的inode节点</panel_attributes>
    <additional_attributes>30.0;10.0;480.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>417</x>
      <y>393</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_empty_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>383</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.在inode_table中正向查找，找到i_count=0的位置，如果此时i_dirt i_lock
都为0，认为找到，如果不为0，如果lock，则wait，如果dirt，则通过write_inode将inode写入缓存
2.找到inode之后，将inode置0，并将i_count置1</panel_attributes>
    <additional_attributes>460.0;10.0;140.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>504</x>
      <y>398</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>read_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>458</x>
      <y>383</y>
      <w>53</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.找到inode的super_block
2.找到inode对应的block号
3.从硬件中读取相应的block到缓冲区
4.将缓冲区中的数据放入到inode_table的inode中</panel_attributes>
    <additional_attributes>10.0;10.0;510.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>383</x>
      <y>407</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>write_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>396</y>
      <w>51</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.找到i_node的super_block
2.根据inode的super_block和inode序号，找到相应的block
3.从硬盘中读取inode的东西至缓冲区
4.改变缓冲区中相应的inode的值
注释：从这里可以看出，dirt表示目前软件改了，但是还没写到缓冲区或者硬件中</panel_attributes>
    <additional_attributes>410.0;10.0;90.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>485</x>
      <y>340</y>
      <w>27</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>dev = dev_i-&gt;i_zone[0]
iput(dev_i);
注意：设备文件的inode可以释放
		但是挂接文件系统的inode是不能释放的
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>495</x>
      <y>328</y>
      <w>41</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>390.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>517</x>
      <y>328</y>
      <w>23</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到挂接设备的文件目录的inode
</panel_attributes>
    <additional_attributes>170.0;10.0;50.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>517</x>
      <y>340</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>562</x>
      <y>346</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>read_super</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>529</x>
      <y>328</y>
      <w>46</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.通过get_super看super_block中是否由对应设备的super_block
2.正向查找super_block中空闲的项（s-&gt;s_dev=0）,并将设备赋值到这个
super_block中
3.读取设备中的超级块，将超级块的数据存储到super_block中
4.检查super_block，并读取inode位图和逻辑位图
</panel_attributes>
    <additional_attributes>50.0;10.0;400.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>534</x>
      <y>322</y>
      <w>3</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>505</x>
      <y>313</y>
      <w>53</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>1.读取要挂接的设备文件
2.读取要设备文件要挂接的目录文件
3.找到要存储的super_block的位置
4.将目录文件挂接在super_block中，将来在iget时，如果判断这个inode有挂接设备
并且找到相应super_block的挂接inode和这个inode相同，则从super_block的dev，
和根节点开始查找
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>533</x>
      <y>328</y>
      <w>58</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;10.0;560.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>584</x>
      <y>339</y>
      <w>15</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>sb-&gt;s_imount=dir_i;
dir_i-&gt;i_mount=1;
dir_i-&gt;i_dirt=1;		
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>648</x>
      <y>310</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>618</x>
      <y>325</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>verify_area</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>634</x>
      <y>325</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>read_pipe</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>650</x>
      <y>329</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>rw_char</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>668</x>
      <y>328</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>block_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>693</x>
      <y>325</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>file_read</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>625</x>
      <y>313</y>
      <w>29</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>270.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>313</y>
      <w>14</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
inode-&gt;i_pipe
file-&gt;f_mode&amp;1
</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>651</x>
      <y>313</y>
      <w>22</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISCHR(inode-&gt;i_mode)</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>652</x>
      <y>313</y>
      <w>26</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISBLK(inode-&gt;i_mode)</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>652</x>
      <y>313</y>
      <w>49</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISDIR(inode-&gt;i_mode) || S_ISREG(inode-&gt;i_mode)</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>682</x>
      <y>331</y>
      <w>49</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>1.初始化要剩余读取的byte
2.找到文件指针指向位置对应的block（bmap），并通过bread读取到缓存区
3.计算出要读取的内容在该block中的偏移量，以及在这个block中的长度，
增加文件指针的位置，更新剩余读取的byte
4.通过偏移量找到要读取内容在缓冲区的起始位置，然后put_fs_byte读取到
buffer中
5.只要还有剩余的读取两，就重复2-4的过程
6.读取完成之后，inode-&gt;i_atime = CURRENT_TIME;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>328</y>
      <w>4</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>827</x>
      <y>305</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_creat</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>827</x>
      <y>313</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_open</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>833</x>
      <y>308</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
O_CREAT | O_TRUNC</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>773</x>
      <y>328</y>
      <w>43</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>1.在进程的filp数组中找到空闲的位置（current-&gt;filp[fd]=NULL）fd
	并且使current-&gt;close_on_exec &amp;= ~(1&lt;&lt;fd)
2.在file_table中找到空闲的位置（f-&gt;f_count=0）
3.(current-&gt;filp[fd]=f)-&gt;f_count++;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>789</x>
      <y>316</y>
      <w>45</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>430.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>861</x>
      <y>327</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>open_namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>832</x>
      <y>316</y>
      <w>39</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>807</x>
      <y>341</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>dir_namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>812</x>
      <y>330</y>
      <w>57</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>550.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>825</x>
      <y>342</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_entry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>330</y>
      <w>39</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>370.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>857</x>
      <y>342</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>new_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>338</y>
      <w>28</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
没有找到对应的（name，inode号）组合</panel_attributes>
    <additional_attributes>10.0;60.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>330</y>
      <w>23</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
O_CREAT
permission(dir,MAY_WRITE)</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>831</x>
      <y>351</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_empty_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>345</y>
      <w>28</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>260.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>851</x>
      <y>353</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_super</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>857</x>
      <y>345</y>
      <w>34</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.在super_block中正向查找s-&gt;s_dev == dev	
2.如果找到则返回该super_block，否则返回Null</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>871</x>
      <y>352</y>
      <w>57</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>1.通过super_block中的imap利用find_first_zero找到该block中第一个为0的bit位
2.错误检查该inode的范围是否在super_block的允许范围内
3.通过set_bit将imap中对应的位置1
4.	bh-&gt;b_dirt = 1;
	inode-&gt;i_count=1;
	inode-&gt;i_nlinks=1;
	inode-&gt;i_dev=dev;
	inode-&gt;i_uid=current-&gt;euid;
	inode-&gt;i_gid=current-&gt;egid;
	inode-&gt;i_dirt=1;
	inode-&gt;i_num = j + i*8192;
	inode-&gt;i_mtime = inode-&gt;i_atime = inode-&gt;i_ctime = CURRENT_TIME;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>862</x>
      <y>345</y>
      <w>37</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;350.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>866</x>
      <y>330</y>
      <w>20</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>880</x>
      <y>341</y>
      <w>21</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>inode-&gt;i_uid = current-&gt;euid;
inode-&gt;i_mode = mode;
inode-&gt;i_dirt = 1;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>969</x>
      <y>342</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>add_entry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>865</x>
      <y>330</y>
      <w>111</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1090.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>973</x>
      <y>345</y>
      <w>72</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
1.在dir的inode的i_zone中获取dir的第一个block号，并读至缓存区
2.查找gaiblock中是否由de-&gt;inode=0的（name，inode号）项，如果有，将名字复制到name
	并将dir-&gt;i_mtime = CURRENT_TIME; bh-&gt;b_dirt = 1;并将所找到的（name，inode）
	项通过指针返回
3.如果该block找完也没找到de-&gt;inode=0的项，则通过create_block来找到相应的block，然后读取缓冲区的
	数据
4.如果超过了现在dir中block的大小限制，说明已经创建了block，令(name,inode)中的inode=0，并扩大dir的size
	此时在重复2的过程，是肯定可以找到相应的（name，inode）项的</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>940</x>
      <y>357</y>
      <w>36</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>340.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>935</x>
      <y>363</y>
      <w>19</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>block = dir-&gt;i_zone[0]
bh = bread(dir-&gt;i_dev,block)
bh = bread(dir-&gt;i_dev,block)
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>961</x>
      <y>357</y>
      <w>15</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
de-&gt;inode=0</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>955</x>
      <y>364</y>
      <w>33</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>dir-&gt;i_mtime = CURRENT_TIME;
for (i=0; i &lt; NAME_LEN ; i++)
	de-&gt;name[i]=(i&lt;namelen)?get_fs_byte(name+i):0;
bh-&gt;b_dirt = 1;
*res_dir = de;

halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>992</x>
      <y>367</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>create_block</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>973</x>
      <y>357</y>
      <w>27</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
de &gt;= BLOCK_SIZE+bh-&gt;b_data</panel_attributes>
    <additional_attributes>10.0;10.0;250.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1011</x>
      <y>365</y>
      <w>33</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>de-&gt;inode=0;
dir-&gt;i_size = (i+1)*sizeof(struct dir_entry);
dir-&gt;i_dirt = 1;
dir-&gt;i_ctime = CURRENT_TIME;

halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>974</x>
      <y>357</y>
      <w>54</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
i*sizeof(struct dir_entry) &gt;= dir-&gt;i_size</panel_attributes>
    <additional_attributes>10.0;10.0;520.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>992</x>
      <y>376</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_bmap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>997</x>
      <y>370</y>
      <w>8</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
create=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>997</x>
      <y>379</y>
      <w>76</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
相较于create=0的代码，create=1的代码主要实现了，当遇到izone=0，或者一阶索引或二阶索引中找不到传入的位置时
（一般是文件结束的时候），就在新申请block，赋值到izone或者一阶/二阶索引中</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>997</x>
      <y>384</y>
      <w>23</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
create &amp;&amp; !inode-&gt;i_zone[block]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>982</x>
      <y>388</y>
      <w>18</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>978</x>
      <y>393</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>new_block</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>996</x>
      <y>392</y>
      <w>45</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>inode-&gt;i_zone[block]=new_block(inode-&gt;i_dev)
inode-&gt;i_ctime=CURRENT_TIME;
inode-&gt;i_dirt=1;
注意：
当在一阶/二阶索引中找不到的时候，要将一阶/二阶索引block所在的
缓存区的bh-&gt;b_dirt=1;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>997</x>
      <y>388</y>
      <w>15</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>937</x>
      <y>400</y>
      <w>48</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>1.通过get_super获取设备的超级块
2.在超级块中的s_zmap中通过find_first_zero查找位是0所在的bit
3.通过set_bit将缓冲区的超级块置位，并将缓冲区的bh-&gt;b_dirt = 1
4.确定新建block存在的位置j += i*8192 + sb-&gt;s_firstdatazone-1
	并确定j没有超过s_nzones的长度
5.通过getblk获取缓冲区，因为是新建的block，所以必定有bh-&gt;b_count=1
	另clear_block清除缓冲区中的数据
6.bh-&gt;b_uptodate = 1;bh-&gt;b_dirt = 1;并释放缓冲区
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>396</y>
      <w>16</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1034</x>
      <y>344</y>
      <w>20</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>de-&gt;inode = inode-&gt;i_num;
bh-&gt;b_dirt = 1;
*res_inode = inode;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>866</x>
      <y>330</y>
      <w>180</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1780.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1092</x>
      <y>315</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_write</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1062</x>
      <y>327</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>write_pipe</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1067</x>
      <y>318</y>
      <w>32</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
inode-&gt;i_pipe
&amp;&amp;file-&gt;f_mode&amp;2</panel_attributes>
    <additional_attributes>300.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1082</x>
      <y>331</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>rw_char</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1086</x>
      <y>318</y>
      <w>24</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISCHR(inode-&gt;i_mode)</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1109</x>
      <y>328</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>block_write</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1096</x>
      <y>318</y>
      <w>21</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISBLK(inode-&gt;i_mode)</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1141</x>
      <y>328</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>file_write</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1096</x>
      <y>318</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
S_ISREG(inode-&gt;i_mode)</panel_attributes>
    <additional_attributes>10.0;10.0;500.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1113</x>
      <y>336</y>
      <w>26</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>确定文件指针所在的位置，
如果是O_APPEND pos = inode-&gt;i_size;
否则指向当前位置 pos = filp-&gt;f_pos;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1124</x>
      <y>331</y>
      <w>24</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1143</x>
      <y>337</y>
      <w>63</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>1.找到存放要写入内容的block
2.从block中读取内容到缓冲区
3.找到开始要读的缓存区pos % BLOCK_SIZE +bh-&gt;b_data; bh-&gt;b_dirt = 1;
4.找到该block中该存储的字节数BLOCK_SIZE-pos % BLOCK_SIZE 或者
	数count -i(count是要写的字节数，i是已经写的字节数，这在最后一个block写不满的时候
	成立)
5.将pos的位置前移要写的字节数，如果pos的位置超过了现在文件的i_size 令inode-&gt;i_size = pos
	inode-&gt;i_dirt = 1;
6.更新i（已经写入的字节数），然后向缓冲区中写入字节*(p++) = get_fs_byte(buf++)
7.整体写完之后：
	inode-&gt;i_mtime = CURRENT_TIME;
	if (!(filp-&gt;f_flags &amp; O_APPEND)) {
		filp-&gt;f_pos = pos;
		inode-&gt;i_ctime = CURRENT_TIME;
	}
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1145</x>
      <y>331</y>
      <w>19</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1240</x>
      <y>313</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_sync</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1244</x>
      <y>305</y>
      <w>10</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>update进程
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1245</x>
      <y>309</y>
      <w>6</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1217</x>
      <y>322</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sync_inodes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1222</x>
      <y>316</y>
      <w>25</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1198</x>
      <y>328</y>
      <w>44</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>1.遍历整个inode_table，如果i_lock=1，则sleepon
2.如果i_lock=0，并且inode-&gt;i_dirt &amp;&amp; !inode-&gt;i_pipe，write_inode
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>325</y>
      <w>5</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1248</x>
      <y>327</y>
      <w>47</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>1.从start_buffer开始遍历，查看b_lock，如果锁住，则sleepon
2.如果没有b_lock，并且b_dirt=1，则通过ll_rw_block去写缓存区到硬盘
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1243</x>
      <y>316</y>
      <w>29</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1055</x>
      <y>752</y>
      <w>58</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
如果找到的buffer bh-&gt;b_dirt=1</panel_attributes>
    <additional_attributes>10.0;10.0;530.0;190.0;560.0;400.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1092</x>
      <y>791</y>
      <w>21</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1085</x>
      <y>795</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sync_dev</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1107</x>
      <y>796</y>
      <w>14</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>wait_on_buffer(bh);
if (bh-&gt;b_count)
	goto repeat;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1110</x>
      <y>791</y>
      <w>6</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1046</x>
      <y>802</y>
      <w>59</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>1.因为没有空闲的buffer了，所以先将该dev dirt的buffer通过ll_rw_block写到硬盘
2.因为第一步已经将dirt的buffer写入到硬盘，所以目前有空闲的buffer，所以通过sync_inodes
申请到空闲buffer，并修改
3.将修改的buffer通过ll_rw_block写入到硬盘中
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>798</y>
      <w>11</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1307</x>
      <y>312</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_lseek</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1302</x>
      <y>315</y>
      <w>15</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
orgin=0
以文件起始位置位标准</panel_attributes>
    <additional_attributes>110.0;10.0;30.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1301</x>
      <y>319</y>
      <w>12</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
！(offset&lt;0)</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1297</x>
      <y>325</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>file-&gt;f_pos=offset
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1309</x>
      <y>315</y>
      <w>16</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
orgin=1
以文件当前位置为标准</panel_attributes>
    <additional_attributes>40.0;10.0;110.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1318</x>
      <y>320</y>
      <w>18</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
！(file-&gt;f_pos+offset&lt;0)</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1312</x>
      <y>326</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>file-&gt;f_pos += offset
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1312</x>
      <y>315</y>
      <w>29</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
orgin=1
以文件结束位置为标准</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1337</x>
      <y>318</y>
      <w>26</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
！(tmp=file-&gt;f_inode-&gt;i_size+offset)</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1331</x>
      <y>326</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>file-&gt;f_pos = tmp
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1398</x>
      <y>305</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_unlink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1366</x>
      <y>308</y>
      <w>40</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到目录文件的inode，
检查文件名
检查目录文件是否有写权限</panel_attributes>
    <additional_attributes>380.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1361</x>
      <y>322</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>dir_namei</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1388</x>
      <y>324</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>find_entry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1392</x>
      <y>308</y>
      <w>28</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到文件的（name，inode号）</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1403</x>
      <y>322</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>iget</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1404</x>
      <y>308</y>
      <w>15</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
得到文件的indoe</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1425</x>
      <y>321</y>
      <w>27</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>(dir-&gt;i_mode &amp; S_ISVTX) &amp;&amp; !suser() &amp;&amp;
current-&gt;euid != inode-&gt;i_uid &amp;&amp;
current-&gt;euid != dir-&gt;i_uid

S_ISDIR(inode-&gt;i_mode)

halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1404</x>
      <y>308</y>
      <w>29</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
检查相应的条件</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1457</x>
      <y>322</y>
      <w>23</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>de-&gt;inode = 0;
bh-&gt;b_dirt = 1;
brelse(bh);
inode-&gt;i_nlinks--;
inode-&gt;i_dirt = 1;
inode-&gt;i_ctime = CURRENT_TIME;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1404</x>
      <y>308</y>
      <w>63</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;610.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1489</x>
      <y>324</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>iput</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1405</x>
      <y>308</y>
      <w>90</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;880.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1484</x>
      <y>327</y>
      <w>13</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
inode-&gt;i_nlinks=0</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1474</x>
      <y>333</y>
      <w>14</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1470</x>
      <y>337</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>truncate</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1486</x>
      <y>337</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>free_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1484</x>
      <y>333</y>
      <w>10</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1780</x>
      <y>289</y>
      <w>29</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>注：end_data指的是数据段的尾端，
栈的尾端是data_limit(0x4000000-4)
并且从后向前增长，所以堆栈的地址一般是比
end_data大的
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1819</x>
      <y>271</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_no_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1803</x>
      <y>274</y>
      <w>33</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
!current-&gt;executable || tmp &gt;= current-&gt;end_data</panel_attributes>
    <additional_attributes>210.0;10.0;110.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1798</x>
      <y>282</y>
      <w>19</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1816</x>
      <y>291</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_empty_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1813</x>
      <y>282</y>
      <w>12</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
address</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1803</x>
      <y>299</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_free_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1823</x>
      <y>299</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>put_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1808</x>
      <y>294</y>
      <w>15</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>294</y>
      <w>12</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1830</x>
      <y>260</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>_page_fault</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1821</x>
      <y>263</y>
      <w>19</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
检测到页面缺失（present）</panel_attributes>
    <additional_attributes>130.0;10.0;50.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1835</x>
      <y>263</y>
      <w>29</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
这是在写只读页面（W/R）时，执行的函数</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1855</x>
      <y>271</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_wp_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1854</x>
      <y>284</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>un_wp_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1859</x>
      <y>274</y>
      <w>36</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
(0xfffff000 &amp;*((unsigned long *) ((address&gt;&gt;20) &amp;0xffc)
这是取页目录项中的地址，即页表项的基地址
((address&gt;&gt;10) &amp; 0xffc)
这是在页表项的基地址上的页表项的偏移地址</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1858</x>
      <y>287</y>
      <w>5</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1833</x>
      <y>291</y>
      <w>77</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>1.如果只读页面不在内核区（old_page &gt;= LOW_MEM），并且mem_map的引用只有一个，那么将该页面设置为可读可写
2.如果上述条件不成立，则新申请一个页面，并将不在内核区的页面引用mem_map--，并设置该页面为可读可写，并将线性
地址中对应的物理地址更改为新的页面
3.复制可读的页面数据到新的页面
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1445</x>
      <y>365</y>
      <w>35</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>文件系统中buffe的字段总结：
1.count 多少个进程正在引用
2.dirt 进程删改过改缓冲块，需要同步到硬盘
3.lock 该缓冲块正在和硬盘交互
4.uptodate 硬盘的数据已经同步到缓冲块
5.wait 等待该缓冲块的进程
6.dev blocknr 是标志和硬盘绑定关系的唯一标志
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>716</x>
      <y>121</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_pipe</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>683</x>
      <y>124</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>380.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>666</x>
      <y>134</y>
      <w>39</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>1.从file_table中找到两个空闲项，将地址放入到f[2]中
2.从当前进程的filp中找到两个空闲项，将位置放入到fd[2]中，
并将file_table中的地址放入到filp中
3.如果上述两个空闲项没找到，则释放位置，并return -1
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>714</x>
      <y>136</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_pipe_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>718</x>
      <y>124</y>
      <w>5</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>700</x>
      <y>145</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_empty_inode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>701</x>
      <y>139</y>
      <w>24</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
从空闲的inode_table中找到空闲项</panel_attributes>
    <additional_attributes>180.0;10.0;50.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>717</x>
      <y>146</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>get_free_page</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>718</x>
      <y>139</y>
      <w>23</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
找到空闲页面，
并赋值inode-&gt;i_size
这里承载的是文件的起始地址</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>732</x>
      <y>147</y>
      <w>26</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>inode-&gt;i_count = 2
(*inode).i_zone[0]=(*inode).i_zone[1]=0
inode-&gt;i_pipe = 1
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>718</x>
      <y>139</y>
      <w>25</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>734</x>
      <y>131</y>
      <w>24</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>f[0]-&gt;f_inode = f[1]-&gt;f_inode = inode;
f[0]-&gt;f_pos = f[1]-&gt;f_pos = 0;
f[0]-&gt;f_mode = 1;		/* read */
f[1]-&gt;f_mode = 2;		/* write */
put_fs_long(fd[0],0+fildes);
put_fs_long(fd[1],1+fildes);
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>124</y>
      <w>24</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1056</x>
      <y>340</y>
      <w>56</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>1.如果要写的数量大于0，则一直执行2~5
2.检查现在pipe的size，如果剩余的size是0，则唤醒等待inode的节点（读管道进程），
并sleepon（最多只能写PAGE_SIZE-1个字节，也就是说写的过程中，写指针不可能和读
指针重合，写指针最多只能再读指针前一个字节）
3.确定此次要写的字节数chars，此次要写的字节数不能大于总共要写的字节数
和pipe的size，将要写的字节数count和已经写的字节数更新written
4.将写指针更新
PIPE_HEAD(*inode) += chars;
PIPE_HEAD(*inode) &amp;= (PAGE_SIZE-1);//如果写到4096，则回转到0继续执行
5.将要写的数据buf写到之前PIPE_HEAD(*inode)指向的内存中
while (chars--&gt;0)
			((char *)inode-&gt;i_size)[size++]=get_fs_byte(buf++);
6.唤醒等待inode的进程（读管道进程）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1067</x>
      <y>330</y>
      <w>17</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>601</x>
      <y>335</y>
      <w>56</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>1.如果要读的count&gt;0，则一直执行2~5
2.获取可读的pipe的size（已经写入的pipe数据），如果可读的size是0，就
唤醒等待inode的节点（写管道进程），并sleepon（在读的过程中读指针可以和
写指针重合）
3.获取本次需要读的数据量chars，这个量不能大于总共要读的数据count和可读的数据size
并将要读的数据count和已经读的数据read更新
4.将读指针向前移本次读的数据量chars
PIPE_TAIL(*inode) += chars;
		PIPE_TAIL(*inode) &amp;= (PAGE_SIZE-1);//如果达到了4096，则回滚
5.将之前的读指针size = PIPE_TAIL(*inode)指向的数据读入到buf中
while (chars--&gt;0)
			put_fs_byte(((char *)inode-&gt;i_size)[size++],buf++);
6.将等待inode的进程唤醒（写管道进程）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>628</x>
      <y>328</y>
      <w>13</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>802</x>
      <y>118</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_signal</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>808</x>
      <y>121</y>
      <w>30</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
对signal的num进行过滤
signum&lt;1 || signum&gt;32 || signum==SIGKILL</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>791</x>
      <y>128</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>tmp.sa_handler = (void (*)(int)) handler;
	tmp.sa_mask = 0;
	tmp.sa_flags = SA_ONESHOT | SA_NOMASK;
	tmp.sa_restorer = (void (*)(void)) restorer;
	handler = (long) current-&gt;sigaction[signum-1].sa_handler;
	current-&gt;sigaction[signum-1] = tmp;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>854</x>
      <y>120</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_pause</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>846</x>
      <y>129</y>
      <w>27</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>	current-&gt;state = TASK_INTERRUPTIBLE;
	schedule();
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>858</x>
      <y>123</y>
      <w>4</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>887</x>
      <y>119</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>sys_kill</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>892</x>
      <y>122</y>
      <w>32</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
当pid=0时，给进程组是当前进程的进程发信号
当pid&gt;0时，给相应的进程发信号
当pid=-1时，给所有进程发信号
当pid&lt;-1时，给进程组是（-pid）的进程发信号</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>886</x>
      <y>128</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>send_sig</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>891</x>
      <y>131</y>
      <w>49</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
做相应的错误检查!p || sig&lt;1 || sig&gt;32
priv || (current-&gt;euid==p-&gt;euid) || suser()（可知priv是强制给进程加信号）</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>883</x>
      <y>138</y>
      <w>16</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>p-&gt;signal |= (1&lt;&lt;(sig-1))
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>975</x>
      <y>111</y>
      <w>13</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>ret_from_sys_call
valign=center</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>976</x>
      <y>119</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>do_signal</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>981</x>
      <y>114</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>965</x>
      <y>122</y>
      <w>18</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
检查信号处理函数</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>958</x>
      <y>128</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>if (sa_handler==1)
if (!sa_handler)
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>976</x>
      <y>129</y>
      <w>15</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>*(&amp;eip) = sa_handler
*(&amp;esp) -= longs
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>122</y>
      <w>15</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
改变内核栈中返回
用户程序的ip和sp
</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>997</x>
      <y>129</y>
      <w>59</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>tmp_esp=esp;
put_fs_long((long) sa-&gt;sa_restorer,tmp_esp++);
put_fs_long(signr,tmp_esp++);							//注意：当调用函数时，是先压传递的参数，再压返回的ip地址
																//并且返回的ip地址是不会在函数的参数列表中的
																//例如本例中的do_signal，在call的时候，是会将下一句“popl %eax“
																//压到栈中，但是在do_singal的参数列表中并没有这一句的地址
if (!(sa-&gt;sa_flags &amp; SA_NOMASK))
	put_fs_long(current-&gt;blocked,tmp_esp++);
put_fs_long(eax,tmp_esp++);
put_fs_long(ecx,tmp_esp++);
put_fs_long(edx,tmp_esp++);
put_fs_long(eflags,tmp_esp++);
put_fs_long(old_eip,tmp_esp++);
current-&gt;blocked |= sa-&gt;sa_mask;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>122</y>
      <w>30</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
修改用户栈中的内容</panel_attributes>
    <additional_attributes>10.0;10.0;280.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1065</x>
      <y>139</y>
      <w>69</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>TASK_RUNNING 			就绪态，可以被调度
TASK_INTERRUPTIBLE 	可中断等待状态，可以被信号设置成TASK_RUNNING
TASK_UNINTERRUPTIBLE	不可中断等待状态，只能被内核直接设置成就绪态（例如在读硬盘的等待的时候）
TASK_ZOMBIE				僵死状态
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>329</x>
      <y>262</y>
      <w>1233</w>
      <h>201</h>
    </coordinates>
    <panel_attributes>文件读写（文件系统部分）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1739</x>
      <y>246</y>
      <w>395</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>内存管理之缺页中断
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>651</x>
      <y>93</y>
      <w>510</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>进程件通信（pipe和信号）
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>788</x>
      <y>808</y>
      <w>88</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>思考：
1.用户代码为什么没办法访问内核代码？
  对于linux0.11而言，没有用户态程序没办法访问内核代码的说法，例如，init中进程1就是用户态程序，但是他访问的就是内核代码。
  只是用户程序没办法访问内核代码，因为用户程序一般是通过shell进程执行的，而shell进程在执行的过程中会执行execve,这里会释放
  掉映射的内核代码（free_page_table），并且将shell进程的程序读入到线性地址中，并开辟自己的用户栈，所以在这个线性地址中
  是没有内核代码和数据的相应映射的，所以没办法访问。
2.为什么用户代码在sys_call之后就可以访问内核代码：
	对于linux0.11而言，当sys_call之后，产生int 0x80中断，此时会将ss，sp,eflags,cs,ip压栈，此时IDT中存有中断服务函数
	的地址，所以此时将cs:ip会赋给相应的寄存器进行跳转，ss:sp应该也进行和相应的切换（猜想）所以此时切换成了内核代码的线性空间
	（主要是cs:ip切换了），所以此时就可以访问到相应的内核代码。
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1975</x>
      <y>261</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>malloc</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1947</x>
      <y>270</y>
      <w>71</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>1.遍历bucket_dir，找到块的size稍大于要申请的len的管理链bdir
2.遍历bdir的链表，找到其中存在空闲的块的管理模块（通过管理模块中的freeptr确定）
3.如果找到相应的管理模块，执行步骤9
	如果没找到相应的管理模块，则执行步骤4
4.如果空闲管理模块链表NULL，就通过init_bucket_desc申请页面，并将页面划分成一个个管理块
	通过链表来管理，最后一个指向NULL，并且链表头free_bucket_desc指向这个链表
5.从链表free_bucket_desc中获取一个管理模块，并将free_bucket_desc更新，指向下一个空闲管理模块
6.将获得的缓冲块进行初始化
	bdesc-&gt;refcnt = 0;
	bdesc-&gt;bucket_size = bdir-&gt;size;
	bdesc-&gt;page = bdesc-&gt;freeptr = (void *) cp = get_free_page();
7.将获取的页面分成bdir-&gt;size的块，并将下一个块的地址写到当前块的首地址中，最后一个块的首地址指向NULL
8.将管理快链接到bdir-&gt;chain中
9.获取空闲的块，并将空闲指针和管理块中已经使用的块数
	retval = (void *) bdesc-&gt;freeptr;
	bdesc-&gt;freeptr = *((void **) retval);
	bdesc-&gt;refcnt++;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1980</x>
      <y>264</y>
      <w>3</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>2045</x>
      <y>260</y>
      <w>12</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>free_s</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2023</x>
      <y>272</y>
      <w>70</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>1.遍历bucket_dir，根据size滤除大于这个大小的而管理模块，如果管理模块的page指向这个obj所在的page，
	则找到了对应的管理模块，否则向大的size中查找
2.找到之后将obj插入到freeptr的链表中，并更新freeptr和refcnt
	*((void **)obj) = bdesc-&gt;freeptr;
	bdesc-&gt;freeptr = obj;
	bdesc-&gt;refcnt--;
3.如果这个管理模块中没有任何在用的块，就需要释放page。
	首先看prev记录的是否是在现在管理快之前，如果这个记录被破坏就从该管理快头重新查找，更新这个prev
	然后将现在的管理块根据prev从当前的链表中拆除。
4.将管理块所管理的page释放掉，并且将管理块加入空闲的管理快链表中
	free_page((unsigned long) bdesc-&gt;page);
	bdesc-&gt;next = free_bucket_desc;
	free_bucket_desc = bdesc;
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2050</x>
      <y>263</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>156</x>
      <y>541</y>
      <w>67</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>i386：
中断：通常指外部中断，
trap：软件内部触发的中断，例如system_call
exception:是因为指令出错导致，例如，除以0

在发生trap的时候，需要当前的运行优先级cpl不低于门（描述符）的优先级dpl，并且要不高于门的
段选择符对应的GDT或LDT的描述符的dpl，这两者任何一个不满足都会产生GP fualt(全面异常)
中断和异常不需要满足前面一个条件

中断发生时，cpu会将eflags中的IF位清掉，防止中断嵌套，但是进入trap时，IF位维持不变

中断或者异常的过程中，如果cpl与GDT或LDT的dpl不同，则会切换堆栈，否者就不会。所以对linux而言，
当用户态切换到内核态的时候，堆栈回发生切换，但是在内核态中，堆栈维持原样
halign=left</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
